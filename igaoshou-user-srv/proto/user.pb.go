// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.1
// source: proto/user.proto

package user

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 玩家标记
type PlayerFlag int32

const (
	PlayerFlag_Normal PlayerFlag = 0 // 普通玩家
	PlayerFlag_Robot  PlayerFlag = 1 // robot
)

// Enum value maps for PlayerFlag.
var (
	PlayerFlag_name = map[int32]string{
		0: "Normal",
		1: "Robot",
	}
	PlayerFlag_value = map[string]int32{
		"Normal": 0,
		"Robot":  1,
	}
)

func (x PlayerFlag) Enum() *PlayerFlag {
	p := new(PlayerFlag)
	*p = x
	return p
}

func (x PlayerFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_user_proto_enumTypes[0].Descriptor()
}

func (PlayerFlag) Type() protoreflect.EnumType {
	return &file_proto_user_proto_enumTypes[0]
}

func (x PlayerFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerFlag.Descriptor instead.
func (PlayerFlag) EnumDescriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{0}
}

type Item_Type int32

const (
	Item_Platform Item_Type = 0 // 平台道具
	Item_Game     Item_Type = 1 // 游戏道具
)

// Enum value maps for Item_Type.
var (
	Item_Type_name = map[int32]string{
		0: "Platform",
		1: "Game",
	}
	Item_Type_value = map[string]int32{
		"Platform": 0,
		"Game":     1,
	}
)

func (x Item_Type) Enum() *Item_Type {
	p := new(Item_Type)
	*p = x
	return p
}

func (x Item_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Item_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_user_proto_enumTypes[1].Descriptor()
}

func (Item_Type) Type() protoreflect.EnumType {
	return &file_proto_user_proto_enumTypes[1]
}

func (x Item_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Item_Type.Descriptor instead.
func (Item_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{0, 0}
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // 道具ID
	Num      int64     `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                           // 道具数量
	Type     Item_Type `protobuf:"varint,3,opt,name=type,proto3,enum=user.Item_Type" json:"type,omitempty"`     // 0平台道具 1游戏道具
	ExpireAt int64     `protobuf:"varint,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"` // 过期时间
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Item) GetType() Item_Type {
	if x != nil {
		return x.Type
	}
	return Item_Platform
}

func (x *Item) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

type GetWinLoseWithDailyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason  string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Openid  string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	GameGid string `protobuf:"bytes,3,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
	PlatAid int32  `protobuf:"varint,4,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	ItemId  int32  `protobuf:"varint,5,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *GetWinLoseWithDailyReq) Reset() {
	*x = GetWinLoseWithDailyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWinLoseWithDailyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWinLoseWithDailyReq) ProtoMessage() {}

func (x *GetWinLoseWithDailyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWinLoseWithDailyReq.ProtoReflect.Descriptor instead.
func (*GetWinLoseWithDailyReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{1}
}

func (x *GetWinLoseWithDailyReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetWinLoseWithDailyReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetWinLoseWithDailyReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *GetWinLoseWithDailyReq) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *GetWinLoseWithDailyReq) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type GetWinLoseWithDailyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	WinLose int64  `protobuf:"varint,2,opt,name=win_lose,json=winLose,proto3" json:"win_lose,omitempty"`
}

func (x *GetWinLoseWithDailyRsp) Reset() {
	*x = GetWinLoseWithDailyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWinLoseWithDailyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWinLoseWithDailyRsp) ProtoMessage() {}

func (x *GetWinLoseWithDailyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWinLoseWithDailyRsp.ProtoReflect.Descriptor instead.
func (*GetWinLoseWithDailyRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{2}
}

func (x *GetWinLoseWithDailyRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetWinLoseWithDailyRsp) GetWinLose() int64 {
	if x != nil {
		return x.WinLose
	}
	return 0
}

type GetUserDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid  string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameGid string `protobuf:"bytes,2,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
}

func (x *GetUserDataReq) Reset() {
	*x = GetUserDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataReq) ProtoMessage() {}

func (x *GetUserDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataReq.ProtoReflect.Descriptor instead.
func (*GetUserDataReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserDataReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetUserDataReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

type GetUserDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`    // 平台账号
	Level       int32      `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"` // 平台level
	Exp         int32      `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`     // 平台 exp
	GameLevel   int32      `protobuf:"varint,4,opt,name=game_level,json=gameLevel,proto3" json:"game_level,omitempty"`
	GameExp     int32      `protobuf:"varint,5,opt,name=game_exp,json=gameExp,proto3" json:"game_exp,omitempty"`
	RegTime     int64      `protobuf:"varint,6,opt,name=reg_time,json=regTime,proto3" json:"reg_time,omitempty"`   // 注册时间
	AreaInfo    string     `protobuf:"bytes,7,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"` // 区域信息
	Err         string     `protobuf:"bytes,8,opt,name=err,proto3" json:"err,omitempty"`
	GameRegTime int64      `protobuf:"varint,9,opt,name=game_reg_time,json=gameRegTime,proto3" json:"game_reg_time,omitempty"` // 游戏注册时间
	Headimage   string     `protobuf:"bytes,10,opt,name=headimage,proto3" json:"headimage,omitempty"`
	Nickname    string     `protobuf:"bytes,11,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Pn          string     `protobuf:"bytes,12,opt,name=pn,proto3" json:"pn,omitempty"`
	PlatAid     int32      `protobuf:"varint,13,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	Flag        PlayerFlag `protobuf:"varint,14,opt,name=flag,proto3,enum=user.PlayerFlag" json:"flag,omitempty"`
}

func (x *GetUserDataRsp) Reset() {
	*x = GetUserDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataRsp) ProtoMessage() {}

func (x *GetUserDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataRsp.ProtoReflect.Descriptor instead.
func (*GetUserDataRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserDataRsp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserDataRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetUserDataRsp) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GetUserDataRsp) GetGameLevel() int32 {
	if x != nil {
		return x.GameLevel
	}
	return 0
}

func (x *GetUserDataRsp) GetGameExp() int32 {
	if x != nil {
		return x.GameExp
	}
	return 0
}

func (x *GetUserDataRsp) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *GetUserDataRsp) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *GetUserDataRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetUserDataRsp) GetGameRegTime() int64 {
	if x != nil {
		return x.GameRegTime
	}
	return 0
}

func (x *GetUserDataRsp) GetHeadimage() string {
	if x != nil {
		return x.Headimage
	}
	return ""
}

func (x *GetUserDataRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetUserDataRsp) GetPn() string {
	if x != nil {
		return x.Pn
	}
	return ""
}

func (x *GetUserDataRsp) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *GetUserDataRsp) GetFlag() PlayerFlag {
	if x != nil {
		return x.Flag
	}
	return PlayerFlag_Normal
}

type GetUserGameDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameId string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetUserGameDataReq) Reset() {
	*x = GetUserGameDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGameDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGameDataReq) ProtoMessage() {}

func (x *GetUserGameDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGameDataReq.ProtoReflect.Descriptor instead.
func (*GetUserGameDataReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserGameDataReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetUserGameDataReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GameLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	AreaInfo string                 `protobuf:"bytes,2,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`
	UserInfo *GameLoginReq_UserInfo `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"` // 更新时，提供该参数
	Uuid     string                 `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GameLoginReq) Reset() {
	*x = GameLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLoginReq) ProtoMessage() {}

func (x *GameLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLoginReq.ProtoReflect.Descriptor instead.
func (*GameLoginReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{6}
}

func (x *GameLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GameLoginReq) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *GameLoginReq) GetUserInfo() *GameLoginReq_UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GameLoginReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GameLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                             // 平台账号
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`           // 游戏ID
	Openid    string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`                         // 游戏账号
	AreaInfo  string `protobuf:"bytes,4,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`     // 所在区域
	PlatLevel int32  `protobuf:"varint,5,opt,name=plat_level,json=platLevel,proto3" json:"plat_level,omitempty"` // 平台level
	PlatExp   int32  `protobuf:"varint,6,opt,name=plat_exp,json=platExp,proto3" json:"plat_exp,omitempty"`       // 平台 exp
	//  int64 diamond = 7; // 现金
	//  int64 ticket_z = 8; // ticket z
	Level int32 `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"` // 游戏等级
	Exp   int32 `protobuf:"varint,10,opt,name=exp,proto3" json:"exp,omitempty"`    // 游戏经验值
	//  int64 score = 11; // 游戏积分
	RegTime    int64             `protobuf:"varint,12,opt,name=reg_time,json=regTime,proto3" json:"reg_time,omitempty"`      // 注册时间
	JoinTime   int64             `protobuf:"varint,13,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`   // 第一次加入游戏时间(当前游戏)
	ItemList   []*Item           `protobuf:"bytes,14,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`    // 道具列表
	Sex        int32             `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`                             // 性别
	Nickname   string            `protobuf:"bytes,16,opt,name=nickname,proto3" json:"nickname,omitempty"`                    // 昵称
	HeadImage  string            `protobuf:"bytes,17,opt,name=head_image,json=headImage,proto3" json:"head_image,omitempty"` // 头像
	Phone      string            `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string            `protobuf:"bytes,19,opt,name=email,proto3" json:"email,omitempty"`
	Err        string            `protobuf:"bytes,20,opt,name=err,proto3" json:"err,omitempty"`
	MaxExp     int32             `protobuf:"varint,21,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty"`
	MaxPlatExp int32             `protobuf:"varint,22,opt,name=max_plat_exp,json=maxPlatExp,proto3" json:"max_plat_exp,omitempty"`
	Metadata   map[string]string `protobuf:"bytes,23,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Newbie     bool              `protobuf:"varint,24,opt,name=newbie,proto3" json:"newbie,omitempty"` // 新玩家标记
	Uid        uint64            `protobuf:"varint,25,opt,name=uid,proto3" json:"uid,omitempty"`       // 玩家数字ID
}

func (x *GameLoginRsp) Reset() {
	*x = GameLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLoginRsp) ProtoMessage() {}

func (x *GameLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLoginRsp.ProtoReflect.Descriptor instead.
func (*GameLoginRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{7}
}

func (x *GameLoginRsp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameLoginRsp) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameLoginRsp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GameLoginRsp) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *GameLoginRsp) GetPlatLevel() int32 {
	if x != nil {
		return x.PlatLevel
	}
	return 0
}

func (x *GameLoginRsp) GetPlatExp() int32 {
	if x != nil {
		return x.PlatExp
	}
	return 0
}

func (x *GameLoginRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GameLoginRsp) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GameLoginRsp) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *GameLoginRsp) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *GameLoginRsp) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *GameLoginRsp) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GameLoginRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GameLoginRsp) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *GameLoginRsp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GameLoginRsp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GameLoginRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GameLoginRsp) GetMaxExp() int32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

func (x *GameLoginRsp) GetMaxPlatExp() int32 {
	if x != nil {
		return x.MaxPlatExp
	}
	return 0
}

func (x *GameLoginRsp) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GameLoginRsp) GetNewbie() bool {
	if x != nil {
		return x.Newbie
	}
	return false
}

func (x *GameLoginRsp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetUserGameDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                             // 平台账号
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`           // 游戏ID
	Openid    string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`                         // 游戏账号
	AreaInfo  string `protobuf:"bytes,4,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`     // 所在区域
	PlatLevel int32  `protobuf:"varint,5,opt,name=plat_level,json=platLevel,proto3" json:"plat_level,omitempty"` // 平台level
	PlatExp   int32  `protobuf:"varint,6,opt,name=plat_exp,json=platExp,proto3" json:"plat_exp,omitempty"`       // 平台 exp
	//  int64 diamond = 7; // 现金
	//  int64 ticket_z = 8; // ticket z
	Level int32 `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"` // 游戏等级
	Exp   int32 `protobuf:"varint,10,opt,name=exp,proto3" json:"exp,omitempty"`    // 游戏经验值
	//  int64 score = 11; // 游戏积分
	RegTime    int64      `protobuf:"varint,12,opt,name=reg_time,json=regTime,proto3" json:"reg_time,omitempty"`      // 注册时间
	JoinTime   int64      `protobuf:"varint,13,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`   // 第一次加入游戏时间(当前游戏)
	ItemList   []*Item    `protobuf:"bytes,14,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`    // 道具列表
	Sex        int32      `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`                             // 性别
	Nickname   string     `protobuf:"bytes,16,opt,name=nickname,proto3" json:"nickname,omitempty"`                    // 昵称
	HeadImage  string     `protobuf:"bytes,17,opt,name=head_image,json=headImage,proto3" json:"head_image,omitempty"` // 头像
	Phone      string     `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string     `protobuf:"bytes,19,opt,name=email,proto3" json:"email,omitempty"`
	Err        string     `protobuf:"bytes,20,opt,name=err,proto3" json:"err,omitempty"`
	MaxExp     int32      `protobuf:"varint,21,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty"`
	MaxPlatExp int32      `protobuf:"varint,22,opt,name=max_plat_exp,json=maxPlatExp,proto3" json:"max_plat_exp,omitempty"`
	Pn         string     `protobuf:"bytes,23,opt,name=pn,proto3" json:"pn,omitempty"`                           // 当前pn
	PlatAid    int32      `protobuf:"varint,24,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"` // 创建账号时平台ID
	Flag       PlayerFlag `protobuf:"varint,25,opt,name=flag,proto3,enum=user.PlayerFlag" json:"flag,omitempty"`
	Uid        uint64     `protobuf:"varint,26,opt,name=uid,proto3" json:"uid,omitempty"` // 玩家数字ID
}

func (x *GetUserGameDataRsp) Reset() {
	*x = GetUserGameDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGameDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGameDataRsp) ProtoMessage() {}

func (x *GetUserGameDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGameDataRsp.ProtoReflect.Descriptor instead.
func (*GetUserGameDataRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserGameDataRsp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserGameDataRsp) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetUserGameDataRsp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetUserGameDataRsp) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *GetUserGameDataRsp) GetPlatLevel() int32 {
	if x != nil {
		return x.PlatLevel
	}
	return 0
}

func (x *GetUserGameDataRsp) GetPlatExp() int32 {
	if x != nil {
		return x.PlatExp
	}
	return 0
}

func (x *GetUserGameDataRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetUserGameDataRsp) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GetUserGameDataRsp) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *GetUserGameDataRsp) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *GetUserGameDataRsp) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *GetUserGameDataRsp) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GetUserGameDataRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetUserGameDataRsp) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *GetUserGameDataRsp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserGameDataRsp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserGameDataRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetUserGameDataRsp) GetMaxExp() int32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

func (x *GetUserGameDataRsp) GetMaxPlatExp() int32 {
	if x != nil {
		return x.MaxPlatExp
	}
	return 0
}

func (x *GetUserGameDataRsp) GetPn() string {
	if x != nil {
		return x.Pn
	}
	return ""
}

func (x *GetUserGameDataRsp) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *GetUserGameDataRsp) GetFlag() PlayerFlag {
	if x != nil {
		return x.Flag
	}
	return PlayerFlag_Normal
}

func (x *GetUserGameDataRsp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UpdateItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid   string            `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameId   string            `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Reason   string            `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Tags     map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ItemList []*Item           `protobuf:"bytes,5,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *UpdateItemReq) Reset() {
	*x = UpdateItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemReq) ProtoMessage() {}

func (x *UpdateItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemReq.ProtoReflect.Descriptor instead.
func (*UpdateItemReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateItemReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UpdateItemReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *UpdateItemReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateItemReq) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateItemReq) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type UpdateItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *UpdateItemRsp) Reset() {
	*x = UpdateItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemRsp) ProtoMessage() {}

func (x *UpdateItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemRsp.ProtoReflect.Descriptor instead.
func (*UpdateItemRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateItemRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type UpdateItemNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason     string            `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`                                                                                     // 操作原因
	ChangeList []*Item           `protobuf:"bytes,5,rep,name=change_list,json=changeList,proto3" json:"change_list,omitempty"`                                                           // 变更列表
	ItemList   []*Item           `protobuf:"bytes,6,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`                                                                 // 道具列表
	Tags       map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 操作相关上下文参数
}

func (x *UpdateItemNot) Reset() {
	*x = UpdateItemNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemNot) ProtoMessage() {}

func (x *UpdateItemNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemNot.ProtoReflect.Descriptor instead.
func (*UpdateItemNot) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateItemNot) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateItemNot) GetChangeList() []*Item {
	if x != nil {
		return x.ChangeList
	}
	return nil
}

func (x *UpdateItemNot) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *UpdateItemNot) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string  `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameId string  `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Items  []int32 `protobuf:"varint,3,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *GetItemReq) Reset() {
	*x = GetItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemReq) ProtoMessage() {}

func (x *GetItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemReq.ProtoReflect.Descriptor instead.
func (*GetItemReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{12}
}

func (x *GetItemReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetItemReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetItemReq) GetItems() []int32 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList []*Item `protobuf:"bytes,1,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Err      string  `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetItemRsp) Reset() {
	*x = GetItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRsp) ProtoMessage() {}

func (x *GetItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRsp.ProtoReflect.Descriptor instead.
func (*GetItemRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{13}
}

func (x *GetItemRsp) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *GetItemRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type UpdateUserDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Headimgurl string `protobuf:"bytes,3,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Sex        int32  `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	AreaInfo   string `protobuf:"bytes,5,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`
	NewUser    bool   `protobuf:"varint,6,opt,name=new_user,json=newUser,proto3" json:"new_user,omitempty"` //新玩家标记false
	Pn         string `protobuf:"bytes,7,opt,name=pn,proto3" json:"pn,omitempty"`
	Phone      string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	GameId     string `protobuf:"bytes,10,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Openid     string `protobuf:"bytes,11,opt,name=openid,proto3" json:"openid,omitempty"`
	PlatAid    int32  `protobuf:"varint,12,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
}

func (x *UpdateUserDataReq) Reset() {
	*x = UpdateUserDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDataReq) ProtoMessage() {}

func (x *UpdateUserDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDataReq.ProtoReflect.Descriptor instead.
func (*UpdateUserDataReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateUserDataReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateUserDataReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateUserDataReq) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *UpdateUserDataReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UpdateUserDataReq) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *UpdateUserDataReq) GetNewUser() bool {
	if x != nil {
		return x.NewUser
	}
	return false
}

func (x *UpdateUserDataReq) GetPn() string {
	if x != nil {
		return x.Pn
	}
	return ""
}

func (x *UpdateUserDataReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateUserDataReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserDataReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *UpdateUserDataReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UpdateUserDataReq) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

type UpdateUserDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *UpdateUserDataRsp) Reset() {
	*x = UpdateUserDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDataRsp) ProtoMessage() {}

func (x *UpdateUserDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDataRsp.ProtoReflect.Descriptor instead.
func (*UpdateUserDataRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUserDataRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type ItemConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ItemConfig) Reset() {
	*x = ItemConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConfig) ProtoMessage() {}

func (x *ItemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConfig.ProtoReflect.Descriptor instead.
func (*ItemConfig) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{16}
}

func (x *ItemConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemConfig) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ItemConfig) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GetItemConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetItemConfigReq) Reset() {
	*x = GetItemConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemConfigReq) ProtoMessage() {}

func (x *GetItemConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemConfigReq.ProtoReflect.Descriptor instead.
func (*GetItemConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{17}
}

type GetItemConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ItemConfig `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Err   string        `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetItemConfigRsp) Reset() {
	*x = GetItemConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemConfigRsp) ProtoMessage() {}

func (x *GetItemConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemConfigRsp.ProtoReflect.Descriptor instead.
func (*GetItemConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{18}
}

func (x *GetItemConfigRsp) GetItems() []*ItemConfig {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetItemConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetRandRobotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId      string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlatAid     int32    `protobuf:"varint,2,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	RobotNum    int32    `protobuf:"varint,3,opt,name=robot_num,json=robotNum,proto3" json:"robot_num,omitempty"`
	ExcludeList []string `protobuf:"bytes,4,rep,name=exclude_list,json=excludeList,proto3" json:"exclude_list,omitempty"`
}

func (x *GetRandRobotReq) Reset() {
	*x = GetRandRobotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandRobotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandRobotReq) ProtoMessage() {}

func (x *GetRandRobotReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandRobotReq.ProtoReflect.Descriptor instead.
func (*GetRandRobotReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{19}
}

func (x *GetRandRobotReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetRandRobotReq) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *GetRandRobotReq) GetRobotNum() int32 {
	if x != nil {
		return x.RobotNum
	}
	return 0
}

func (x *GetRandRobotReq) GetExcludeList() []string {
	if x != nil {
		return x.ExcludeList
	}
	return nil
}

type GetRandRobotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string                       `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Openid    string                       `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	GameId    string                       `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlatAid   int32                        `protobuf:"varint,4,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	Err       string                       `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
	RobotList []*GetRandRobotRsp_RobotInfo `protobuf:"bytes,6,rep,name=robotList,proto3" json:"robotList,omitempty"`
}

func (x *GetRandRobotRsp) Reset() {
	*x = GetRandRobotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandRobotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandRobotRsp) ProtoMessage() {}

func (x *GetRandRobotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandRobotRsp.ProtoReflect.Descriptor instead.
func (*GetRandRobotRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{20}
}

func (x *GetRandRobotRsp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetRandRobotRsp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetRandRobotRsp) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetRandRobotRsp) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *GetRandRobotRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetRandRobotRsp) GetRobotList() []*GetRandRobotRsp_RobotInfo {
	if x != nil {
		return x.RobotList
	}
	return nil
}

type GetPlyGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameId string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetPlyGameListReq) Reset() {
	*x = GetPlyGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyGameListReq) ProtoMessage() {}

func (x *GetPlyGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyGameListReq.ProtoReflect.Descriptor instead.
func (*GetPlyGameListReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{21}
}

func (x *GetPlyGameListReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetPlyGameListReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GetPlyGameListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*GetPlyGameListRsp_GameData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	PlatLevel  int32                         `protobuf:"varint,2,opt,name=plat_level,json=platLevel,proto3" json:"plat_level,omitempty"`
	PlatExp    int32                         `protobuf:"varint,3,opt,name=plat_exp,json=platExp,proto3" json:"plat_exp,omitempty"`
	MaxPlatExp int32                         `protobuf:"varint,4,opt,name=max_plat_exp,json=maxPlatExp,proto3" json:"max_plat_exp,omitempty"`
	Err        string                        `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetPlyGameListRsp) Reset() {
	*x = GetPlyGameListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyGameListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyGameListRsp) ProtoMessage() {}

func (x *GetPlyGameListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyGameListRsp.ProtoReflect.Descriptor instead.
func (*GetPlyGameListRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{22}
}

func (x *GetPlyGameListRsp) GetList() []*GetPlyGameListRsp_GameData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetPlyGameListRsp) GetPlatLevel() int32 {
	if x != nil {
		return x.PlatLevel
	}
	return 0
}

func (x *GetPlyGameListRsp) GetPlatExp() int32 {
	if x != nil {
		return x.PlatExp
	}
	return 0
}

func (x *GetPlyGameListRsp) GetMaxPlatExp() int32 {
	if x != nil {
		return x.MaxPlatExp
	}
	return 0
}

func (x *GetPlyGameListRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type Coin2TicketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid  string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameGid string `protobuf:"bytes,2,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
}

func (x *Coin2TicketReq) Reset() {
	*x = Coin2TicketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin2TicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin2TicketReq) ProtoMessage() {}

func (x *Coin2TicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin2TicketReq.ProtoReflect.Descriptor instead.
func (*Coin2TicketReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{23}
}

func (x *Coin2TicketReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *Coin2TicketReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

type Coin2TicketRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin    int64  `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Ticket  int64  `protobuf:"varint,2,opt,name=ticket,proto3" json:"ticket,omitempty"` // 最新ticket数量
	Convert int64  `protobuf:"varint,3,opt,name=convert,proto3" json:"convert,omitempty"`
	Err     string `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *Coin2TicketRsp) Reset() {
	*x = Coin2TicketRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin2TicketRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin2TicketRsp) ProtoMessage() {}

func (x *Coin2TicketRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin2TicketRsp.ProtoReflect.Descriptor instead.
func (*Coin2TicketRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{24}
}

func (x *Coin2TicketRsp) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *Coin2TicketRsp) GetTicket() int64 {
	if x != nil {
		return x.Ticket
	}
	return 0
}

func (x *Coin2TicketRsp) GetConvert() int64 {
	if x != nil {
		return x.Convert
	}
	return 0
}

func (x *Coin2TicketRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type PlayerBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid    string  `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Uuid      string  `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	HeadImage string  `protobuf:"bytes,3,opt,name=headImage,proto3" json:"headImage,omitempty"`
	Nickname  string  `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex       int32   `protobuf:"varint,5,opt,name=sex,proto3" json:"sex,omitempty"`
	AreaInfo  string  `protobuf:"bytes,6,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`
	Props     []*Item `protobuf:"bytes,7,rep,name=props,proto3" json:"props,omitempty"` // 玩家展示道具
}

func (x *PlayerBrief) Reset() {
	*x = PlayerBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBrief) ProtoMessage() {}

func (x *PlayerBrief) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBrief.ProtoReflect.Descriptor instead.
func (*PlayerBrief) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{25}
}

func (x *PlayerBrief) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *PlayerBrief) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PlayerBrief) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *PlayerBrief) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerBrief) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *PlayerBrief) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *PlayerBrief) GetProps() []*Item {
	if x != nil {
		return x.Props
	}
	return nil
}

type BatchToObtainPlyBriefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenidList []string `protobuf:"bytes,1,rep,name=openid_list,json=openidList,proto3" json:"openid_list,omitempty"`
}

func (x *BatchToObtainPlyBriefReq) Reset() {
	*x = BatchToObtainPlyBriefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchToObtainPlyBriefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchToObtainPlyBriefReq) ProtoMessage() {}

func (x *BatchToObtainPlyBriefReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchToObtainPlyBriefReq.ProtoReflect.Descriptor instead.
func (*BatchToObtainPlyBriefReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{26}
}

func (x *BatchToObtainPlyBriefReq) GetOpenidList() []string {
	if x != nil {
		return x.OpenidList
	}
	return nil
}

type BatchToObtainPlyBriefRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BriefMap map[string]*PlayerBrief `protobuf:"bytes,1,rep,name=brief_map,json=briefMap,proto3" json:"brief_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Err      string                  `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *BatchToObtainPlyBriefRsp) Reset() {
	*x = BatchToObtainPlyBriefRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchToObtainPlyBriefRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchToObtainPlyBriefRsp) ProtoMessage() {}

func (x *BatchToObtainPlyBriefRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchToObtainPlyBriefRsp.ProtoReflect.Descriptor instead.
func (*BatchToObtainPlyBriefRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{27}
}

func (x *BatchToObtainPlyBriefRsp) GetBriefMap() map[string]*PlayerBrief {
	if x != nil {
		return x.BriefMap
	}
	return nil
}

func (x *BatchToObtainPlyBriefRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type BatchToObtainPlyBriefByUuidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UuidList []string `protobuf:"bytes,1,rep,name=uuid_list,json=uuidList,proto3" json:"uuid_list,omitempty"`
	GameGid  string   `protobuf:"bytes,2,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
}

func (x *BatchToObtainPlyBriefByUuidReq) Reset() {
	*x = BatchToObtainPlyBriefByUuidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchToObtainPlyBriefByUuidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchToObtainPlyBriefByUuidReq) ProtoMessage() {}

func (x *BatchToObtainPlyBriefByUuidReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchToObtainPlyBriefByUuidReq.ProtoReflect.Descriptor instead.
func (*BatchToObtainPlyBriefByUuidReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{28}
}

func (x *BatchToObtainPlyBriefByUuidReq) GetUuidList() []string {
	if x != nil {
		return x.UuidList
	}
	return nil
}

func (x *BatchToObtainPlyBriefByUuidReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

type BatchToObtainPlyBriefByUuidRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BriefMap map[string]*PlayerBrief `protobuf:"bytes,1,rep,name=brief_map,json=briefMap,proto3" json:"brief_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Err      string                  `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *BatchToObtainPlyBriefByUuidRsp) Reset() {
	*x = BatchToObtainPlyBriefByUuidRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchToObtainPlyBriefByUuidRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchToObtainPlyBriefByUuidRsp) ProtoMessage() {}

func (x *BatchToObtainPlyBriefByUuidRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchToObtainPlyBriefByUuidRsp.ProtoReflect.Descriptor instead.
func (*BatchToObtainPlyBriefByUuidRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{29}
}

func (x *BatchToObtainPlyBriefByUuidRsp) GetBriefMap() map[string]*PlayerBrief {
	if x != nil {
		return x.BriefMap
	}
	return nil
}

func (x *BatchToObtainPlyBriefByUuidRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type UpdateLocationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid   string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *UpdateLocationReq) Reset() {
	*x = UpdateLocationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationReq) ProtoMessage() {}

func (x *UpdateLocationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationReq.ProtoReflect.Descriptor instead.
func (*UpdateLocationReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateLocationReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UpdateLocationReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateLocationReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type UpdateLocationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *UpdateLocationRsp) Reset() {
	*x = UpdateLocationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationRsp) ProtoMessage() {}

func (x *UpdateLocationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationRsp.ProtoReflect.Descriptor instead.
func (*UpdateLocationRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateLocationRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// 道具变更通知
//  broker  topic: user.item.change
type UserItemChangeNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatAid    int32             `protobuf:"varint,1,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	Openid     string            `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Uuid       string            `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	GameId     string            `protobuf:"bytes,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Reason     string            `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	ItemList   []*Item           `protobuf:"bytes,6,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Tags       map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChangeList []*Item           `protobuf:"bytes,8,rep,name=change_list,json=changeList,proto3" json:"change_list,omitempty"`
	UpdateTime int64             `protobuf:"varint,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *UserItemChangeNot) Reset() {
	*x = UserItemChangeNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserItemChangeNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserItemChangeNot) ProtoMessage() {}

func (x *UserItemChangeNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserItemChangeNot.ProtoReflect.Descriptor instead.
func (*UserItemChangeNot) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{32}
}

func (x *UserItemChangeNot) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *UserItemChangeNot) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UserItemChangeNot) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UserItemChangeNot) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *UserItemChangeNot) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UserItemChangeNot) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *UserItemChangeNot) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserItemChangeNot) GetChangeList() []*Item {
	if x != nil {
		return x.ChangeList
	}
	return nil
}

func (x *UserItemChangeNot) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type GetGameDataWithUUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	GameGid string `protobuf:"bytes,2,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
}

func (x *GetGameDataWithUUidReq) Reset() {
	*x = GetGameDataWithUUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameDataWithUUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameDataWithUUidReq) ProtoMessage() {}

func (x *GetGameDataWithUUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameDataWithUUidReq.ProtoReflect.Descriptor instead.
func (*GetGameDataWithUUidReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{33}
}

func (x *GetGameDataWithUUidReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetGameDataWithUUidReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

type GetGameDataWithUUidRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                             // 平台账号
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`           // 游戏ID
	Openid    string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`                         // 游戏账号
	AreaInfo  string `protobuf:"bytes,4,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`     // 所在区域
	PlatLevel int32  `protobuf:"varint,5,opt,name=plat_level,json=platLevel,proto3" json:"plat_level,omitempty"` // 平台level
	PlatExp   int32  `protobuf:"varint,6,opt,name=plat_exp,json=platExp,proto3" json:"plat_exp,omitempty"`       // 平台 exp
	//  int64 diamond = 7; // 现金
	//  int64 ticket_z = 8; // ticket z
	Level int32 `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"` // 游戏等级
	Exp   int32 `protobuf:"varint,10,opt,name=exp,proto3" json:"exp,omitempty"`    // 游戏经验值
	//  int64 score = 11; // 游戏积分
	RegTime    int64      `protobuf:"varint,12,opt,name=reg_time,json=regTime,proto3" json:"reg_time,omitempty"`      // 注册时间
	JoinTime   int64      `protobuf:"varint,13,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`   // 第一次加入游戏时间(当前游戏)
	ItemList   []*Item    `protobuf:"bytes,14,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`    // 道具列表
	Sex        int32      `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`                             // 性别
	Nickname   string     `protobuf:"bytes,16,opt,name=nickname,proto3" json:"nickname,omitempty"`                    // 昵称
	HeadImage  string     `protobuf:"bytes,17,opt,name=head_image,json=headImage,proto3" json:"head_image,omitempty"` // 头像
	Phone      string     `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string     `protobuf:"bytes,19,opt,name=email,proto3" json:"email,omitempty"`
	Err        string     `protobuf:"bytes,20,opt,name=err,proto3" json:"err,omitempty"`
	MaxExp     int32      `protobuf:"varint,21,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty"`
	MaxPlatExp int32      `protobuf:"varint,22,opt,name=max_plat_exp,json=maxPlatExp,proto3" json:"max_plat_exp,omitempty"`
	Pn         string     `protobuf:"bytes,23,opt,name=pn,proto3" json:"pn,omitempty"`                           // 当前pn
	PlatAid    int32      `protobuf:"varint,24,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"` // 创建账号时平台ID
	Flag       PlayerFlag `protobuf:"varint,25,opt,name=flag,proto3,enum=user.PlayerFlag" json:"flag,omitempty"`
}

func (x *GetGameDataWithUUidRsp) Reset() {
	*x = GetGameDataWithUUidRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameDataWithUUidRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameDataWithUUidRsp) ProtoMessage() {}

func (x *GetGameDataWithUUidRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameDataWithUUidRsp.ProtoReflect.Descriptor instead.
func (*GetGameDataWithUUidRsp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{34}
}

func (x *GetGameDataWithUUidRsp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetPlatLevel() int32 {
	if x != nil {
		return x.PlatLevel
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetPlatExp() int32 {
	if x != nil {
		return x.PlatExp
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *GetGameDataWithUUidRsp) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetMaxExp() int32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetMaxPlatExp() int32 {
	if x != nil {
		return x.MaxPlatExp
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetPn() string {
	if x != nil {
		return x.Pn
	}
	return ""
}

func (x *GetGameDataWithUUidRsp) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *GetGameDataWithUUidRsp) GetFlag() PlayerFlag {
	if x != nil {
		return x.Flag
	}
	return PlayerFlag_Normal
}

type GameLoginReq_UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Nickname   string            `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Headimgurl string            `protobuf:"bytes,3,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Sex        int32             `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	AreaInfo   string            `protobuf:"bytes,5,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`
	Phone      string            `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string            `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	RegPn      string            `protobuf:"bytes,8,opt,name=reg_pn,json=regPn,proto3" json:"reg_pn,omitempty"`
	RegPlat    int32             `protobuf:"varint,9,opt,name=reg_plat,json=regPlat,proto3" json:"reg_plat,omitempty"`
	Metadata   map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GameLoginReq_UserInfo) Reset() {
	*x = GameLoginReq_UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLoginReq_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLoginReq_UserInfo) ProtoMessage() {}

func (x *GameLoginReq_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLoginReq_UserInfo.ProtoReflect.Descriptor instead.
func (*GameLoginReq_UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GameLoginReq_UserInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameLoginReq_UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GameLoginReq_UserInfo) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *GameLoginReq_UserInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GameLoginReq_UserInfo) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *GameLoginReq_UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GameLoginReq_UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GameLoginReq_UserInfo) GetRegPn() string {
	if x != nil {
		return x.RegPn
	}
	return ""
}

func (x *GameLoginReq_UserInfo) GetRegPlat() int32 {
	if x != nil {
		return x.RegPlat
	}
	return 0
}

func (x *GameLoginReq_UserInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetRandRobotRsp_RobotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Openid string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *GetRandRobotRsp_RobotInfo) Reset() {
	*x = GetRandRobotRsp_RobotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandRobotRsp_RobotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandRobotRsp_RobotInfo) ProtoMessage() {}

func (x *GetRandRobotRsp_RobotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandRobotRsp_RobotInfo.ProtoReflect.Descriptor instead.
func (*GetRandRobotRsp_RobotInfo) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetRandRobotRsp_RobotInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetRandRobotRsp_RobotInfo) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type GetPlyGameListRsp_GameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Level  int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Exp    int32  `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`
	MaxExp int32  `protobuf:"varint,4,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty"`
	Openid string `protobuf:"bytes,5,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *GetPlyGameListRsp_GameData) Reset() {
	*x = GetPlyGameListRsp_GameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyGameListRsp_GameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyGameListRsp_GameData) ProtoMessage() {}

func (x *GetPlyGameListRsp_GameData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyGameListRsp_GameData.ProtoReflect.Descriptor instead.
func (*GetPlyGameListRsp_GameData) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{22, 0}
}

func (x *GetPlyGameListRsp_GameData) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetPlyGameListRsp_GameData) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetPlyGameListRsp_GameData) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GetPlyGameListRsp_GameData) GetMaxExp() int32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

func (x *GetPlyGameListRsp_GameData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

var File_proto_user_proto protoreflect.FileDescriptor

var file_proto_user_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x41, 0x74, 0x22, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47,
	0x61, 0x6d, 0x65, 0x10, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e,
	0x4c, 0x6f, 0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x45, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x77,
	0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x77,
	0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x22, 0xff, 0x02, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x45, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x22,
	0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x45, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x22, 0xfd, 0x03, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x1a, 0xeb, 0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67,
	0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x15,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x5f, 0x70, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x65, 0x67, 0x50, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x67, 0x50, 0x6c, 0x61, 0x74,
	0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x05, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x45, 0x78,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x12, 0x20,
	0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x74, 0x45, 0x78, 0x70,
	0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x17, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x65, 0x77, 0x62, 0x69, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6e, 0x65, 0x77, 0x62, 0x69, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x04, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x45, 0x78, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78,
	0x50, 0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f,
	0x61, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x41,
	0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x6c,
	0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x21, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xe9, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x47,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xb5, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x22,
	0x25, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x58, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x22, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x12, 0x3d, 0x0a, 0x09, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61,
	0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x37, 0x0a, 0x09, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xb5,
	0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x74, 0x45, 0x78, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x5f, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50,
	0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x1a, 0x7c, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x32, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x0e, 0x43,
	0x6f, 0x69, 0x6e, 0x32, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xc4, 0x01, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x3b, 0x0a, 0x18,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x18, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x52, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x09, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c,
	0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x73, 0x70, 0x2e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x62, 0x72, 0x69, 0x65, 0x66, 0x4d, 0x61,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x1a, 0x4e, 0x0a, 0x0d, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62,
	0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x42, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x75, 0x75, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x22, 0xd3, 0x01,
	0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50,
	0x6c, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x4f, 0x0a, 0x09, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x62, 0x72, 0x69, 0x65, 0x66, 0x4d, 0x61,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x1a, 0x4e, 0x0a, 0x0d, 0x42, 0x72, 0x69, 0x65, 0x66, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x25, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xf2, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x55,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x47, 0x69, 0x64, 0x22, 0xd4, 0x04, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x55, 0x55, 0x69, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x65, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x70,
	0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x2a, 0x23, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x10,
	0x01, 0x32, 0xb5, 0x08, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x50, 0x43, 0x12, 0x3b, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x55, 0x55, 0x69,
	0x64, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x55, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x55, 0x55, 0x69, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61,
	0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x32, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x32, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x32, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e,
	0x50, 0x6c, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x1b, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c,
	0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x4f, 0x62,
	0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x42, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x09, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x4c, 0x6f,
	0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_user_proto_rawDescOnce sync.Once
	file_proto_user_proto_rawDescData = file_proto_user_proto_rawDesc
)

func file_proto_user_proto_rawDescGZIP() []byte {
	file_proto_user_proto_rawDescOnce.Do(func() {
		file_proto_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_proto_rawDescData)
	})
	return file_proto_user_proto_rawDescData
}

var file_proto_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_user_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_proto_user_proto_goTypes = []interface{}{
	(PlayerFlag)(0),                        // 0: user.PlayerFlag
	(Item_Type)(0),                         // 1: user.Item.Type
	(*Item)(nil),                           // 2: user.Item
	(*GetWinLoseWithDailyReq)(nil),         // 3: user.GetWinLoseWithDailyReq
	(*GetWinLoseWithDailyRsp)(nil),         // 4: user.GetWinLoseWithDailyRsp
	(*GetUserDataReq)(nil),                 // 5: user.GetUserDataReq
	(*GetUserDataRsp)(nil),                 // 6: user.GetUserDataRsp
	(*GetUserGameDataReq)(nil),             // 7: user.GetUserGameDataReq
	(*GameLoginReq)(nil),                   // 8: user.GameLoginReq
	(*GameLoginRsp)(nil),                   // 9: user.GameLoginRsp
	(*GetUserGameDataRsp)(nil),             // 10: user.GetUserGameDataRsp
	(*UpdateItemReq)(nil),                  // 11: user.UpdateItemReq
	(*UpdateItemRsp)(nil),                  // 12: user.UpdateItemRsp
	(*UpdateItemNot)(nil),                  // 13: user.UpdateItemNot
	(*GetItemReq)(nil),                     // 14: user.GetItemReq
	(*GetItemRsp)(nil),                     // 15: user.GetItemRsp
	(*UpdateUserDataReq)(nil),              // 16: user.UpdateUserDataReq
	(*UpdateUserDataRsp)(nil),              // 17: user.UpdateUserDataRsp
	(*ItemConfig)(nil),                     // 18: user.ItemConfig
	(*GetItemConfigReq)(nil),               // 19: user.GetItemConfigReq
	(*GetItemConfigRsp)(nil),               // 20: user.GetItemConfigRsp
	(*GetRandRobotReq)(nil),                // 21: user.GetRandRobotReq
	(*GetRandRobotRsp)(nil),                // 22: user.GetRandRobotRsp
	(*GetPlyGameListReq)(nil),              // 23: user.GetPlyGameListReq
	(*GetPlyGameListRsp)(nil),              // 24: user.GetPlyGameListRsp
	(*Coin2TicketReq)(nil),                 // 25: user.Coin2TicketReq
	(*Coin2TicketRsp)(nil),                 // 26: user.Coin2TicketRsp
	(*PlayerBrief)(nil),                    // 27: user.PlayerBrief
	(*BatchToObtainPlyBriefReq)(nil),       // 28: user.BatchToObtainPlyBriefReq
	(*BatchToObtainPlyBriefRsp)(nil),       // 29: user.BatchToObtainPlyBriefRsp
	(*BatchToObtainPlyBriefByUuidReq)(nil), // 30: user.BatchToObtainPlyBriefByUuidReq
	(*BatchToObtainPlyBriefByUuidRsp)(nil), // 31: user.BatchToObtainPlyBriefByUuidRsp
	(*UpdateLocationReq)(nil),              // 32: user.UpdateLocationReq
	(*UpdateLocationRsp)(nil),              // 33: user.UpdateLocationRsp
	(*UserItemChangeNot)(nil),              // 34: user.UserItemChangeNot
	(*GetGameDataWithUUidReq)(nil),         // 35: user.GetGameDataWithUUidReq
	(*GetGameDataWithUUidRsp)(nil),         // 36: user.GetGameDataWithUUidRsp
	(*GameLoginReq_UserInfo)(nil),          // 37: user.GameLoginReq.UserInfo
	nil,                                    // 38: user.GameLoginReq.UserInfo.MetadataEntry
	nil,                                    // 39: user.GameLoginRsp.MetadataEntry
	nil,                                    // 40: user.UpdateItemReq.TagsEntry
	nil,                                    // 41: user.UpdateItemNot.TagsEntry
	(*GetRandRobotRsp_RobotInfo)(nil),      // 42: user.GetRandRobotRsp.RobotInfo
	(*GetPlyGameListRsp_GameData)(nil),     // 43: user.GetPlyGameListRsp.GameData
	nil,                                    // 44: user.BatchToObtainPlyBriefRsp.BriefMapEntry
	nil,                                    // 45: user.BatchToObtainPlyBriefByUuidRsp.BriefMapEntry
	nil,                                    // 46: user.UserItemChangeNot.TagsEntry
}
var file_proto_user_proto_depIdxs = []int32{
	1,  // 0: user.Item.type:type_name -> user.Item.Type
	0,  // 1: user.GetUserDataRsp.flag:type_name -> user.PlayerFlag
	37, // 2: user.GameLoginReq.user_info:type_name -> user.GameLoginReq.UserInfo
	2,  // 3: user.GameLoginRsp.item_list:type_name -> user.Item
	39, // 4: user.GameLoginRsp.metadata:type_name -> user.GameLoginRsp.MetadataEntry
	2,  // 5: user.GetUserGameDataRsp.item_list:type_name -> user.Item
	0,  // 6: user.GetUserGameDataRsp.flag:type_name -> user.PlayerFlag
	40, // 7: user.UpdateItemReq.tags:type_name -> user.UpdateItemReq.TagsEntry
	2,  // 8: user.UpdateItemReq.item_list:type_name -> user.Item
	2,  // 9: user.UpdateItemNot.change_list:type_name -> user.Item
	2,  // 10: user.UpdateItemNot.item_list:type_name -> user.Item
	41, // 11: user.UpdateItemNot.tags:type_name -> user.UpdateItemNot.TagsEntry
	2,  // 12: user.GetItemRsp.item_list:type_name -> user.Item
	18, // 13: user.GetItemConfigRsp.items:type_name -> user.ItemConfig
	42, // 14: user.GetRandRobotRsp.robotList:type_name -> user.GetRandRobotRsp.RobotInfo
	43, // 15: user.GetPlyGameListRsp.list:type_name -> user.GetPlyGameListRsp.GameData
	2,  // 16: user.PlayerBrief.props:type_name -> user.Item
	44, // 17: user.BatchToObtainPlyBriefRsp.brief_map:type_name -> user.BatchToObtainPlyBriefRsp.BriefMapEntry
	45, // 18: user.BatchToObtainPlyBriefByUuidRsp.brief_map:type_name -> user.BatchToObtainPlyBriefByUuidRsp.BriefMapEntry
	2,  // 19: user.UserItemChangeNot.item_list:type_name -> user.Item
	46, // 20: user.UserItemChangeNot.tags:type_name -> user.UserItemChangeNot.TagsEntry
	2,  // 21: user.UserItemChangeNot.change_list:type_name -> user.Item
	2,  // 22: user.GetGameDataWithUUidRsp.item_list:type_name -> user.Item
	0,  // 23: user.GetGameDataWithUUidRsp.flag:type_name -> user.PlayerFlag
	38, // 24: user.GameLoginReq.UserInfo.metadata:type_name -> user.GameLoginReq.UserInfo.MetadataEntry
	27, // 25: user.BatchToObtainPlyBriefRsp.BriefMapEntry.value:type_name -> user.PlayerBrief
	27, // 26: user.BatchToObtainPlyBriefByUuidRsp.BriefMapEntry.value:type_name -> user.PlayerBrief
	5,  // 27: user.UserRPC.GetUserData:input_type -> user.GetUserDataReq
	35, // 28: user.UserRPC.GetGameDataWithUUid:input_type -> user.GetGameDataWithUUidReq
	7,  // 29: user.UserRPC.GetUserGameData:input_type -> user.GetUserGameDataReq
	11, // 30: user.UserRPC.UpdateItem:input_type -> user.UpdateItemReq
	14, // 31: user.UserRPC.GetItem:input_type -> user.GetItemReq
	16, // 32: user.UserRPC.UpdateUserData:input_type -> user.UpdateUserDataReq
	19, // 33: user.UserRPC.GetItemConfig:input_type -> user.GetItemConfigReq
	21, // 34: user.UserRPC.GetRandRobot:input_type -> user.GetRandRobotReq
	23, // 35: user.UserRPC.GetPlyGameList:input_type -> user.GetPlyGameListReq
	25, // 36: user.UserRPC.Coin2Ticket:input_type -> user.Coin2TicketReq
	28, // 37: user.UserRPC.BatchToObtainPlyBrief:input_type -> user.BatchToObtainPlyBriefReq
	30, // 38: user.UserRPC.BatchToObtainPlyBriefByUuid:input_type -> user.BatchToObtainPlyBriefByUuidReq
	32, // 39: user.UserRPC.UpdateLocation:input_type -> user.UpdateLocationReq
	8,  // 40: user.UserRPC.GameLogin:input_type -> user.GameLoginReq
	3,  // 41: user.UserRPC.GetWinLoseWithDaily:input_type -> user.GetWinLoseWithDailyReq
	6,  // 42: user.UserRPC.GetUserData:output_type -> user.GetUserDataRsp
	36, // 43: user.UserRPC.GetGameDataWithUUid:output_type -> user.GetGameDataWithUUidRsp
	10, // 44: user.UserRPC.GetUserGameData:output_type -> user.GetUserGameDataRsp
	12, // 45: user.UserRPC.UpdateItem:output_type -> user.UpdateItemRsp
	15, // 46: user.UserRPC.GetItem:output_type -> user.GetItemRsp
	17, // 47: user.UserRPC.UpdateUserData:output_type -> user.UpdateUserDataRsp
	20, // 48: user.UserRPC.GetItemConfig:output_type -> user.GetItemConfigRsp
	22, // 49: user.UserRPC.GetRandRobot:output_type -> user.GetRandRobotRsp
	24, // 50: user.UserRPC.GetPlyGameList:output_type -> user.GetPlyGameListRsp
	26, // 51: user.UserRPC.Coin2Ticket:output_type -> user.Coin2TicketRsp
	29, // 52: user.UserRPC.BatchToObtainPlyBrief:output_type -> user.BatchToObtainPlyBriefRsp
	31, // 53: user.UserRPC.BatchToObtainPlyBriefByUuid:output_type -> user.BatchToObtainPlyBriefByUuidRsp
	33, // 54: user.UserRPC.UpdateLocation:output_type -> user.UpdateLocationRsp
	9,  // 55: user.UserRPC.GameLogin:output_type -> user.GameLoginRsp
	4,  // 56: user.UserRPC.GetWinLoseWithDaily:output_type -> user.GetWinLoseWithDailyRsp
	42, // [42:57] is the sub-list for method output_type
	27, // [27:42] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_user_proto_init() }
func file_proto_user_proto_init() {
	if File_proto_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWinLoseWithDailyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWinLoseWithDailyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGameDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGameDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItemNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandRobotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandRobotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyGameListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin2TicketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin2TicketRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchToObtainPlyBriefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchToObtainPlyBriefRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchToObtainPlyBriefByUuidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchToObtainPlyBriefByUuidRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserItemChangeNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameDataWithUUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameDataWithUUidRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLoginReq_UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandRobotRsp_RobotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyGameListRsp_GameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_proto_goTypes,
		DependencyIndexes: file_proto_user_proto_depIdxs,
		EnumInfos:         file_proto_user_proto_enumTypes,
		MessageInfos:      file_proto_user_proto_msgTypes,
	}.Build()
	File_proto_user_proto = out.File
	file_proto_user_proto_rawDesc = nil
	file_proto_user_proto_goTypes = nil
	file_proto_user_proto_depIdxs = nil
}
