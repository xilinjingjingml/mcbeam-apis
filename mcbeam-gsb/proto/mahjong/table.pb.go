// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.1
// source: proto/mahjong/table.proto

package mahjong

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{0}
}

// 准备
type ReadyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReady bool `protobuf:"varint,1,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
}

func (x *ReadyReq) Reset() {
	*x = ReadyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyReq) ProtoMessage() {}

func (x *ReadyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyReq.ProtoReflect.Descriptor instead.
func (*ReadyReq) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{1}
}

func (x *ReadyReq) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type ReadyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ReadyRsp) Reset() {
	*x = ReadyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyRsp) ProtoMessage() {}

func (x *ReadyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyRsp.ProtoReflect.Descriptor instead.
func (*ReadyRsp) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{2}
}

func (x *ReadyRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type ReadyNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	IsReady bool   `protobuf:"varint,2,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
}

func (x *ReadyNot) Reset() {
	*x = ReadyNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyNot) ProtoMessage() {}

func (x *ReadyNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyNot.ProtoReflect.Descriptor instead.
func (*ReadyNot) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{3}
}

func (x *ReadyNot) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReadyNot) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

// 回合开始广播
type RoundStartNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId   string `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	CurRound  int32  `protobuf:"varint,2,opt,name=cur_round,json=curRound,proto3" json:"cur_round,omitempty"`    // 当前局数
	StartTime int64  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
}

func (x *RoundStartNot) Reset() {
	*x = RoundStartNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundStartNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundStartNot) ProtoMessage() {}

func (x *RoundStartNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundStartNot.ProtoReflect.Descriptor instead.
func (*RoundStartNot) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{4}
}

func (x *RoundStartNot) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *RoundStartNot) GetCurRound() int32 {
	if x != nil {
		return x.CurRound
	}
	return 0
}

func (x *RoundStartNot) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

// 回合结束广播
type RoundEndNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId  string `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	CurRound int32  `protobuf:"varint,2,opt,name=cur_round,json=curRound,proto3" json:"cur_round,omitempty"` // 当前局数
	EndTime  int64  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`    // 结束时间
}

func (x *RoundEndNot) Reset() {
	*x = RoundEndNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundEndNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundEndNot) ProtoMessage() {}

func (x *RoundEndNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundEndNot.ProtoReflect.Descriptor instead.
func (*RoundEndNot) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{5}
}

func (x *RoundEndNot) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *RoundEndNot) GetCurRound() int32 {
	if x != nil {
		return x.CurRound
	}
	return 0
}

func (x *RoundEndNot) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type EnterRoomNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId   string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Uid      string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Money    int64  `protobuf:"varint,4,opt,name=money,proto3" json:"money,omitempty"`
	Type     int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"` // 0 player 1 robot
	ChairId  int32  `protobuf:"varint,6,opt,name=chair_id,json=chairId,proto3" json:"chair_id,omitempty"`
}

func (x *EnterRoomNot) Reset() {
	*x = EnterRoomNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRoomNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRoomNot) ProtoMessage() {}

func (x *EnterRoomNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRoomNot.ProtoReflect.Descriptor instead.
func (*EnterRoomNot) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{6}
}

func (x *EnterRoomNot) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *EnterRoomNot) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *EnterRoomNot) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *EnterRoomNot) GetMoney() int64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *EnterRoomNot) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *EnterRoomNot) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

// 回合结算通知
type RoundSettleNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        int32                        `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // 当前回合数
	GameGid      string                       `protobuf:"bytes,2,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
	ServerId     string                       `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	MatchCid     string                       `protobuf:"bytes,4,opt,name=match_cid,json=matchCid,proto3" json:"match_cid,omitempty"`              // 场次ID
	MatchId      string                       `protobuf:"bytes,5,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                 // 场次实例ID
	RoomId       string                       `protobuf:"bytes,6,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                    // 房间ID
	RoundId      string                       `protobuf:"bytes,7,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                 // 回合标志
	Rules        string                       `protobuf:"bytes,8,opt,name=rules,proto3" json:"rules,omitempty"`                                    // 游戏规则 gs_properties
	FinishedTime int64                        `protobuf:"varint,9,opt,name=finished_time,json=finishedTime,proto3" json:"finished_time,omitempty"` // 结算时间
	SettleItem   int32                        `protobuf:"varint,10,opt,name=settle_item,json=settleItem,proto3" json:"settle_item,omitempty"`
	PlatAid      int32                        `protobuf:"varint,11,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	PlayerList   []*RoundSettleNot_PlayerData `protobuf:"bytes,12,rep,name=player_list,json=playerList,proto3" json:"player_list,omitempty"` // 玩家列表
	Winners      []string                     `protobuf:"bytes,13,rep,name=winners,proto3" json:"winners,omitempty"`                         // 本局赢家列表
}

func (x *RoundSettleNot) Reset() {
	*x = RoundSettleNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundSettleNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundSettleNot) ProtoMessage() {}

func (x *RoundSettleNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundSettleNot.ProtoReflect.Descriptor instead.
func (*RoundSettleNot) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{7}
}

func (x *RoundSettleNot) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RoundSettleNot) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *RoundSettleNot) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RoundSettleNot) GetMatchCid() string {
	if x != nil {
		return x.MatchCid
	}
	return ""
}

func (x *RoundSettleNot) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *RoundSettleNot) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoundSettleNot) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *RoundSettleNot) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

func (x *RoundSettleNot) GetFinishedTime() int64 {
	if x != nil {
		return x.FinishedTime
	}
	return 0
}

func (x *RoundSettleNot) GetSettleItem() int32 {
	if x != nil {
		return x.SettleItem
	}
	return 0
}

func (x *RoundSettleNot) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *RoundSettleNot) GetPlayerList() []*RoundSettleNot_PlayerData {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

func (x *RoundSettleNot) GetWinners() []string {
	if x != nil {
		return x.Winners
	}
	return nil
}

type KickOutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *KickOutReq) Reset() {
	*x = KickOutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutReq) ProtoMessage() {}

func (x *KickOutReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOutReq.ProtoReflect.Descriptor instead.
func (*KickOutReq) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{8}
}

func (x *KickOutReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type KickOutRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *KickOutRsp) Reset() {
	*x = KickOutRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutRsp) ProtoMessage() {}

func (x *KickOutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOutRsp.ProtoReflect.Descriptor instead.
func (*KickOutRsp) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{9}
}

func (x *KickOutRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type StartGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartGameReq) Reset() {
	*x = StartGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameReq) ProtoMessage() {}

func (x *StartGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameReq.ProtoReflect.Descriptor instead.
func (*StartGameReq) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{10}
}

type StartGameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *StartGameRsp) Reset() {
	*x = StartGameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRsp) ProtoMessage() {}

func (x *StartGameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRsp.ProtoReflect.Descriptor instead.
func (*StartGameRsp) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{11}
}

func (x *StartGameRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type RoundSettleNot_PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid       string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname     string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	CurWinLost   int64  `protobuf:"varint,3,opt,name=cur_win_lost,json=curWinLost,proto3" json:"cur_win_lost,omitempty"`       // 本局输赢
	TotalWinLost int64  `protobuf:"varint,4,opt,name=total_win_lost,json=totalWinLost,proto3" json:"total_win_lost,omitempty"` // 总输赢
}

func (x *RoundSettleNot_PlayerData) Reset() {
	*x = RoundSettleNot_PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mahjong_table_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundSettleNot_PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundSettleNot_PlayerData) ProtoMessage() {}

func (x *RoundSettleNot_PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mahjong_table_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundSettleNot_PlayerData.ProtoReflect.Descriptor instead.
func (*RoundSettleNot_PlayerData) Descriptor() ([]byte, []int) {
	return file_proto_mahjong_table_proto_rawDescGZIP(), []int{7, 0}
}

func (x *RoundSettleNot_PlayerData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *RoundSettleNot_PlayerData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RoundSettleNot_PlayerData) GetCurWinLost() int64 {
	if x != nil {
		return x.CurWinLost
	}
	return 0
}

func (x *RoundSettleNot_PlayerData) GetTotalWinLost() int64 {
	if x != nil {
		return x.TotalWinLost
	}
	return 0
}

var File_proto_mahjong_table_proto protoreflect.FileDescriptor

var file_proto_mahjong_table_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x61, 0x68,
	0x6a, 0x6f, 0x6e, 0x67, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x0a,
	0x08, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x22, 0x1c, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x37, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x79, 0x4e, 0x6f, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x66, 0x0a, 0x0d, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x75, 0x72, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72,
	0x49, 0x64, 0x22, 0xab, 0x04, 0x0a, 0x0e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61,
	0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x4e, 0x6f, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0x88, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x5f,
	0x77, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x74,
	0x22, 0x24, 0x0a, 0x0a, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0a, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x22, 0x20, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x32, 0x6b, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x68,
	0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x6d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_mahjong_table_proto_rawDescOnce sync.Once
	file_proto_mahjong_table_proto_rawDescData = file_proto_mahjong_table_proto_rawDesc
)

func file_proto_mahjong_table_proto_rawDescGZIP() []byte {
	file_proto_mahjong_table_proto_rawDescOnce.Do(func() {
		file_proto_mahjong_table_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mahjong_table_proto_rawDescData)
	})
	return file_proto_mahjong_table_proto_rawDescData
}

var file_proto_mahjong_table_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_mahjong_table_proto_goTypes = []interface{}{
	(*Empty)(nil),                     // 0: mahjong.Empty
	(*ReadyReq)(nil),                  // 1: mahjong.ReadyReq
	(*ReadyRsp)(nil),                  // 2: mahjong.ReadyRsp
	(*ReadyNot)(nil),                  // 3: mahjong.ReadyNot
	(*RoundStartNot)(nil),             // 4: mahjong.RoundStartNot
	(*RoundEndNot)(nil),               // 5: mahjong.RoundEndNot
	(*EnterRoomNot)(nil),              // 6: mahjong.EnterRoomNot
	(*RoundSettleNot)(nil),            // 7: mahjong.RoundSettleNot
	(*KickOutReq)(nil),                // 8: mahjong.KickOutReq
	(*KickOutRsp)(nil),                // 9: mahjong.KickOutRsp
	(*StartGameReq)(nil),              // 10: mahjong.StartGameReq
	(*StartGameRsp)(nil),              // 11: mahjong.StartGameRsp
	(*RoundSettleNot_PlayerData)(nil), // 12: mahjong.RoundSettleNot.PlayerData
}
var file_proto_mahjong_table_proto_depIdxs = []int32{
	12, // 0: mahjong.RoundSettleNot.player_list:type_name -> mahjong.RoundSettleNot.PlayerData
	1,  // 1: mahjong.Table.Ready:input_type -> mahjong.ReadyReq
	10, // 2: mahjong.Table.StartGame:input_type -> mahjong.StartGameReq
	0,  // 3: mahjong.Table.Ready:output_type -> mahjong.Empty
	0,  // 4: mahjong.Table.StartGame:output_type -> mahjong.Empty
	3,  // [3:5] is the sub-list for method output_type
	1,  // [1:3] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_mahjong_table_proto_init() }
func file_proto_mahjong_table_proto_init() {
	if File_proto_mahjong_table_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mahjong_table_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundStartNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundEndNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterRoomNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundSettleNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOutRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mahjong_table_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundSettleNot_PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mahjong_table_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mahjong_table_proto_goTypes,
		DependencyIndexes: file_proto_mahjong_table_proto_depIdxs,
		MessageInfos:      file_proto_mahjong_table_proto_msgTypes,
	}.Build()
	File_proto_mahjong_table_proto = out.File
	file_proto_mahjong_table_proto_rawDesc = nil
	file_proto_mahjong_table_proto_goTypes = nil
	file_proto_mahjong_table_proto_depIdxs = nil
}
