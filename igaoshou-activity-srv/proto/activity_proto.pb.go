// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: proto/activity_proto.proto

package activity

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ActivityType int32

const (
	ActivityType_Normal        ActivityType = 0 // 通用
	ActivityType_Turntable     ActivityType = 1 // 转盘
	ActivityType_SignIn        ActivityType = 2 // 签到
	ActivityType_Broke         ActivityType = 3 // 低保
	ActivityType_RecoverLosses ActivityType = 4 // 输分找回
	ActivityType_WinCrit       ActivityType = 5 // 赢分暴击
)

// Enum value maps for ActivityType.
var (
	ActivityType_name = map[int32]string{
		0: "Normal",
		1: "Turntable",
		2: "SignIn",
		3: "Broke",
		4: "RecoverLosses",
		5: "WinCrit",
	}
	ActivityType_value = map[string]int32{
		"Normal":        0,
		"Turntable":     1,
		"SignIn":        2,
		"Broke":         3,
		"RecoverLosses": 4,
		"WinCrit":       5,
	}
)

func (x ActivityType) Enum() *ActivityType {
	p := new(ActivityType)
	*p = x
	return p
}

func (x ActivityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_activity_proto_proto_enumTypes[0].Descriptor()
}

func (ActivityType) Type() protoreflect.EnumType {
	return &file_proto_activity_proto_proto_enumTypes[0]
}

func (x ActivityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityType.Descriptor instead.
func (ActivityType) EnumDescriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{0}
}

type ActivityStatusNot_Status int32

const (
	ActivityStatusNot_Underway  ActivityStatusNot_Status = 0 // 进行中
	ActivityStatusNot_Completed ActivityStatusNot_Status = 1 // 已完成
)

// Enum value maps for ActivityStatusNot_Status.
var (
	ActivityStatusNot_Status_name = map[int32]string{
		0: "Underway",
		1: "Completed",
	}
	ActivityStatusNot_Status_value = map[string]int32{
		"Underway":  0,
		"Completed": 1,
	}
)

func (x ActivityStatusNot_Status) Enum() *ActivityStatusNot_Status {
	p := new(ActivityStatusNot_Status)
	*p = x
	return p
}

func (x ActivityStatusNot_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityStatusNot_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_activity_proto_proto_enumTypes[1].Descriptor()
}

func (ActivityStatusNot_Status) Type() protoreflect.EnumType {
	return &file_proto_activity_proto_proto_enumTypes[1]
}

func (x ActivityStatusNot_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityStatusNot_Status.Descriptor instead.
func (ActivityStatusNot_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{40, 0}
}

type ActivityStatusNot_Type int32

const (
	ActivityStatusNot_Sign     ActivityStatusNot_Type = 0 // 签到
	ActivityStatusNot_Activity ActivityStatusNot_Type = 2 // 活动
)

// Enum value maps for ActivityStatusNot_Type.
var (
	ActivityStatusNot_Type_name = map[int32]string{
		0: "Sign",
		2: "Activity",
	}
	ActivityStatusNot_Type_value = map[string]int32{
		"Sign":     0,
		"Activity": 2,
	}
)

func (x ActivityStatusNot_Type) Enum() *ActivityStatusNot_Type {
	p := new(ActivityStatusNot_Type)
	*p = x
	return p
}

func (x ActivityStatusNot_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityStatusNot_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_activity_proto_proto_enumTypes[2].Descriptor()
}

func (ActivityStatusNot_Type) Type() protoreflect.EnumType {
	return &file_proto_activity_proto_proto_enumTypes[2]
}

func (x ActivityStatusNot_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityStatusNot_Type.Descriptor instead.
func (ActivityStatusNot_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{40, 1}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{0}
}

type AwardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"item_id"
	ItemId int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty" bson:"item_id"` //道具id  0：v币 1：奖券 2：钻石
	//@inject_tag: bson:"item_num"
	ItemNum int32 `protobuf:"varint,2,opt,name=item_num,json=itemNum,proto3" json:"item_num,omitempty" bson:"item_num"` //道具数量
}

func (x *AwardItem) Reset() {
	*x = AwardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardItem) ProtoMessage() {}

func (x *AwardItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardItem.ProtoReflect.Descriptor instead.
func (*AwardItem) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{1}
}

func (x *AwardItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AwardItem) GetItemNum() int32 {
	if x != nil {
		return x.ItemNum
	}
	return 0
}

type RewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId         int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                           //道具id
	MinNum         int32 `protobuf:"varint,2,opt,name=min_num,json=minNum,proto3" json:"min_num,omitempty"`                           //道具最少数量
	MaxNum         int32 `protobuf:"varint,3,opt,name=max_num,json=maxNum,proto3" json:"max_num,omitempty"`                           //道具最大数量
	MultipleMinNum int32 `protobuf:"varint,4,opt,name=multiple_min_num,json=multipleMinNum,proto3" json:"multiple_min_num,omitempty"` //道具多倍奖励最少数量
	MultipleMaxNum int32 `protobuf:"varint,5,opt,name=multiple_max_num,json=multipleMaxNum,proto3" json:"multiple_max_num,omitempty"` //道具多倍奖励最大数量
}

func (x *RewardItem) Reset() {
	*x = RewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardItem) ProtoMessage() {}

func (x *RewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardItem.ProtoReflect.Descriptor instead.
func (*RewardItem) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{2}
}

func (x *RewardItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *RewardItem) GetMinNum() int32 {
	if x != nil {
		return x.MinNum
	}
	return 0
}

func (x *RewardItem) GetMaxNum() int32 {
	if x != nil {
		return x.MaxNum
	}
	return 0
}

func (x *RewardItem) GetMultipleMinNum() int32 {
	if x != nil {
		return x.MultipleMinNum
	}
	return 0
}

func (x *RewardItem) GetMultipleMaxNum() int32 {
	if x != nil {
		return x.MultipleMaxNum
	}
	return 0
}

type Weight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards  []*RewardItem `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	Weight   int32         `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`                    //权重
	UserItem []*AwardItem  `protobuf:"bytes,3,rep,name=user_item,json=userItem,proto3" json:"user_item,omitempty"` // 开始
}

func (x *Weight) Reset() {
	*x = Weight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weight) ProtoMessage() {}

func (x *Weight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weight.ProtoReflect.Descriptor instead.
func (*Weight) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{3}
}

func (x *Weight) GetRewards() []*RewardItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *Weight) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Weight) GetUserItem() []*AwardItem {
	if x != nil {
		return x.UserItem
	}
	return nil
}

type ActivityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      int32                       `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` //1000以下为商城界面活动
	Name            string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc            string                      `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	IconType        int32                       `protobuf:"varint,4,opt,name=icon_type,json=iconType,proto3" json:"icon_type,omitempty"`
	IntervalTime    int32                       `protobuf:"varint,5,opt,name=interval_time,json=intervalTime,proto3" json:"interval_time,omitempty"`
	NoviceDays      int32                       `protobuf:"varint,6,opt,name=novice_days,json=noviceDays,proto3" json:"novice_days,omitempty"`
	DayTimes        int32                       `protobuf:"varint,7,opt,name=day_times,json=dayTimes,proto3" json:"day_times,omitempty"`
	AdAid           int32                       `protobuf:"varint,8,opt,name=ad_aid,json=adAid,proto3" json:"ad_aid,omitempty"`                      //对应的广告点
	Weight          []*Weight                   `protobuf:"bytes,9,rep,name=weight,proto3" json:"weight,omitempty"`                                  // 随机奖励配置
	NoviceWeight    []*Weight                   `protobuf:"bytes,10,rep,name=novice_weight,json=noviceWeight,proto3" json:"novice_weight,omitempty"` // 新手奖励配置
	FixWeight       []*ActivityConfig_FixWeight `protobuf:"bytes,11,rep,name=fix_weight,json=fixWeight,proto3" json:"fix_weight,omitempty"`          // 固定次数奖励配置
	Param           string                      `protobuf:"bytes,12,opt,name=param,proto3" json:"param,omitempty"`
	ReceiveTime     int32                       `protobuf:"varint,13,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`               //领取时间
	ReceiveNum      int32                       `protobuf:"varint,14,opt,name=receive_num,json=receiveNum,proto3" json:"receive_num,omitempty"`                  //当日领取次数
	ReceiveDays     int32                       `protobuf:"varint,15,opt,name=receive_days,json=receiveDays,proto3" json:"receive_days,omitempty"`               //总领取天数
	TotalReceiveNum int32                       `protobuf:"varint,16,opt,name=total_receive_num,json=totalReceiveNum,proto3" json:"total_receive_num,omitempty"` //总领取次数
	CostItem        *AwardItem                  `protobuf:"bytes,17,opt,name=cost_item,json=costItem,proto3" json:"cost_item,omitempty"`                         // 消耗
	Awards          []*AwardItem                `protobuf:"bytes,18,rep,name=awards,proto3" json:"awards,omitempty"`                                             // 奖励
	PlayerData      string                      `protobuf:"bytes,19,opt,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
	IntervalSeconds int32                       `protobuf:"varint,20,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
}

func (x *ActivityConfig) Reset() {
	*x = ActivityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConfig) ProtoMessage() {}

func (x *ActivityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConfig.ProtoReflect.Descriptor instead.
func (*ActivityConfig) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityConfig) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivityConfig) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ActivityConfig) GetIconType() int32 {
	if x != nil {
		return x.IconType
	}
	return 0
}

func (x *ActivityConfig) GetIntervalTime() int32 {
	if x != nil {
		return x.IntervalTime
	}
	return 0
}

func (x *ActivityConfig) GetNoviceDays() int32 {
	if x != nil {
		return x.NoviceDays
	}
	return 0
}

func (x *ActivityConfig) GetDayTimes() int32 {
	if x != nil {
		return x.DayTimes
	}
	return 0
}

func (x *ActivityConfig) GetAdAid() int32 {
	if x != nil {
		return x.AdAid
	}
	return 0
}

func (x *ActivityConfig) GetWeight() []*Weight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *ActivityConfig) GetNoviceWeight() []*Weight {
	if x != nil {
		return x.NoviceWeight
	}
	return nil
}

func (x *ActivityConfig) GetFixWeight() []*ActivityConfig_FixWeight {
	if x != nil {
		return x.FixWeight
	}
	return nil
}

func (x *ActivityConfig) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *ActivityConfig) GetReceiveTime() int32 {
	if x != nil {
		return x.ReceiveTime
	}
	return 0
}

func (x *ActivityConfig) GetReceiveNum() int32 {
	if x != nil {
		return x.ReceiveNum
	}
	return 0
}

func (x *ActivityConfig) GetReceiveDays() int32 {
	if x != nil {
		return x.ReceiveDays
	}
	return 0
}

func (x *ActivityConfig) GetTotalReceiveNum() int32 {
	if x != nil {
		return x.TotalReceiveNum
	}
	return 0
}

func (x *ActivityConfig) GetCostItem() *AwardItem {
	if x != nil {
		return x.CostItem
	}
	return nil
}

func (x *ActivityConfig) GetAwards() []*AwardItem {
	if x != nil {
		return x.Awards
	}
	return nil
}

func (x *ActivityConfig) GetPlayerData() string {
	if x != nil {
		return x.PlayerData
	}
	return ""
}

func (x *ActivityConfig) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

type GetActivityConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int32  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	MatchId    string `protobuf:"bytes,2,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Version    int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	RoundCount int32  `protobuf:"varint,4,opt,name=round_count,json=roundCount,proto3" json:"round_count,omitempty"`
}

func (x *GetActivityConfigReq) Reset() {
	*x = GetActivityConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityConfigReq) ProtoMessage() {}

func (x *GetActivityConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityConfigReq.ProtoReflect.Descriptor instead.
func (*GetActivityConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{5}
}

func (x *GetActivityConfigReq) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *GetActivityConfigReq) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *GetActivityConfigReq) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetActivityConfigReq) GetRoundCount() int32 {
	if x != nil {
		return x.RoundCount
	}
	return 0
}

type GetActivityConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32             `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg  string            `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Configs []*ActivityConfig `protobuf:"bytes,3,rep,name=configs,proto3" json:"configs,omitempty"`
	Err     string            `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
	Debug   string            `protobuf:"bytes,5,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *GetActivityConfigRsp) Reset() {
	*x = GetActivityConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityConfigRsp) ProtoMessage() {}

func (x *GetActivityConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityConfigRsp.ProtoReflect.Descriptor instead.
func (*GetActivityConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{6}
}

func (x *GetActivityConfigRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetActivityConfigRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetActivityConfigRsp) GetConfigs() []*ActivityConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *GetActivityConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetActivityConfigRsp) GetDebug() string {
	if x != nil {
		return x.Debug
	}
	return ""
}

type GetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int32  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	DelayAward int32  `protobuf:"varint,2,opt,name=delay_award,json=delayAward,proto3" json:"delay_award,omitempty"`
	Stage      int32  `protobuf:"varint,3,opt,name=stage,proto3" json:"stage,omitempty"`
	Multiple   int32  `protobuf:"varint,4,opt,name=multiple,proto3" json:"multiple,omitempty"` //领取多倍奖励
	PlayerData string `protobuf:"bytes,5,opt,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
}

func (x *GetRewardReq) Reset() {
	*x = GetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardReq) ProtoMessage() {}

func (x *GetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardReq.ProtoReflect.Descriptor instead.
func (*GetRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{7}
}

func (x *GetRewardReq) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *GetRewardReq) GetDelayAward() int32 {
	if x != nil {
		return x.DelayAward
	}
	return 0
}

func (x *GetRewardReq) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *GetRewardReq) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *GetRewardReq) GetPlayerData() string {
	if x != nil {
		return x.PlayerData
	}
	return ""
}

type GetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode     int32        `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg      string       `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	RewardIndex int32        `protobuf:"varint,3,opt,name=reward_index,json=rewardIndex,proto3" json:"reward_index,omitempty"`
	AwardItem   []*AwardItem `protobuf:"bytes,4,rep,name=award_item,json=awardItem,proto3" json:"award_item,omitempty"`
	Err         string       `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetRewardRsp) Reset() {
	*x = GetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardRsp) ProtoMessage() {}

func (x *GetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardRsp.ProtoReflect.Descriptor instead.
func (*GetRewardRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{8}
}

func (x *GetRewardRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetRewardRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetRewardRsp) GetRewardIndex() int32 {
	if x != nil {
		return x.RewardIndex
	}
	return 0
}

func (x *GetRewardRsp) GetAwardItem() []*AwardItem {
	if x != nil {
		return x.AwardItem
	}
	return nil
}

func (x *GetRewardRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetDelayRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int32  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	PlayerData string `protobuf:"bytes,2,opt,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
	Multiple   int32  `protobuf:"varint,3,opt,name=multiple,proto3" json:"multiple,omitempty"` //领取多倍奖励
}

func (x *GetDelayRewardReq) Reset() {
	*x = GetDelayRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelayRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelayRewardReq) ProtoMessage() {}

func (x *GetDelayRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelayRewardReq.ProtoReflect.Descriptor instead.
func (*GetDelayRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{9}
}

func (x *GetDelayRewardReq) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *GetDelayRewardReq) GetPlayerData() string {
	if x != nil {
		return x.PlayerData
	}
	return ""
}

func (x *GetDelayRewardReq) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

type GetDelayRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int32        `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg    string       `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	AwardItem []*AwardItem `protobuf:"bytes,3,rep,name=award_item,json=awardItem,proto3" json:"award_item,omitempty"`
	Err       string       `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetDelayRewardRsp) Reset() {
	*x = GetDelayRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelayRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelayRewardRsp) ProtoMessage() {}

func (x *GetDelayRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelayRewardRsp.ProtoReflect.Descriptor instead.
func (*GetDelayRewardRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{10}
}

func (x *GetDelayRewardRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetDelayRewardRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetDelayRewardRsp) GetAwardItem() []*AwardItem {
	if x != nil {
		return x.AwardItem
	}
	return nil
}

func (x *GetDelayRewardRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type CopyActivityConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatAid   int32 `protobuf:"varint,1,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	ToPlatAid int32 `protobuf:"varint,2,opt,name=to_plat_aid,json=toPlatAid,proto3" json:"to_plat_aid,omitempty"`
}

func (x *CopyActivityConfigReq) Reset() {
	*x = CopyActivityConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyActivityConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyActivityConfigReq) ProtoMessage() {}

func (x *CopyActivityConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyActivityConfigReq.ProtoReflect.Descriptor instead.
func (*CopyActivityConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{11}
}

func (x *CopyActivityConfigReq) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *CopyActivityConfigReq) GetToPlatAid() int32 {
	if x != nil {
		return x.ToPlatAid
	}
	return 0
}

type CopyActivityConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
}

func (x *CopyActivityConfigRsp) Reset() {
	*x = CopyActivityConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyActivityConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyActivityConfigRsp) ProtoMessage() {}

func (x *CopyActivityConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyActivityConfigRsp.ProtoReflect.Descriptor instead.
func (*CopyActivityConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{12}
}

func (x *CopyActivityConfigRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CopyActivityConfigRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type PokerCrapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Guess      int32 `protobuf:"varint,2,opt,name=guess,proto3" json:"guess,omitempty"` // 押注
}

func (x *PokerCrapReq) Reset() {
	*x = PokerCrapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PokerCrapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PokerCrapReq) ProtoMessage() {}

func (x *PokerCrapReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PokerCrapReq.ProtoReflect.Descriptor instead.
func (*PokerCrapReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{13}
}

func (x *PokerCrapReq) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *PokerCrapReq) GetGuess() int32 {
	if x != nil {
		return x.Guess
	}
	return 0
}

type PokerCrapRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int32        `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg    string       `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	AwardItem []*AwardItem `protobuf:"bytes,3,rep,name=award_item,json=awardItem,proto3" json:"award_item,omitempty"` // 当前可获得奖励
	CurTimes  int32        `protobuf:"varint,4,opt,name=cur_times,json=curTimes,proto3" json:"cur_times,omitempty"`   // 当前次数
	MaxTimes  int32        `protobuf:"varint,5,opt,name=max_times,json=maxTimes,proto3" json:"max_times,omitempty"`   // 最大次数
	Result    int32        `protobuf:"varint,6,opt,name=result,proto3" json:"result,omitempty"`                       // 结果
	Err       string       `protobuf:"bytes,7,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *PokerCrapRsp) Reset() {
	*x = PokerCrapRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PokerCrapRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PokerCrapRsp) ProtoMessage() {}

func (x *PokerCrapRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PokerCrapRsp.ProtoReflect.Descriptor instead.
func (*PokerCrapRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{14}
}

func (x *PokerCrapRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *PokerCrapRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *PokerCrapRsp) GetAwardItem() []*AwardItem {
	if x != nil {
		return x.AwardItem
	}
	return nil
}

func (x *PokerCrapRsp) GetCurTimes() int32 {
	if x != nil {
		return x.CurTimes
	}
	return 0
}

func (x *PokerCrapRsp) GetMaxTimes() int32 {
	if x != nil {
		return x.MaxTimes
	}
	return 0
}

func (x *PokerCrapRsp) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *PokerCrapRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetShopPayResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoxGid string `protobuf:"bytes,1,opt,name=box_gid,json=boxGid,proto3" json:"box_gid,omitempty"`
}

func (x *GetShopPayResultReq) Reset() {
	*x = GetShopPayResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopPayResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopPayResultReq) ProtoMessage() {}

func (x *GetShopPayResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopPayResultReq.ProtoReflect.Descriptor instead.
func (*GetShopPayResultReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{15}
}

func (x *GetShopPayResultReq) GetBoxGid() string {
	if x != nil {
		return x.BoxGid
	}
	return ""
}

type GetShopPayResultRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       string       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	AwardItem []*AwardItem `protobuf:"bytes,2,rep,name=award_item,json=awardItem,proto3" json:"award_item,omitempty"`
}

func (x *GetShopPayResultRsp) Reset() {
	*x = GetShopPayResultRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopPayResultRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopPayResultRsp) ProtoMessage() {}

func (x *GetShopPayResultRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopPayResultRsp.ProtoReflect.Descriptor instead.
func (*GetShopPayResultRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{16}
}

func (x *GetShopPayResultRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetShopPayResultRsp) GetAwardItem() []*AwardItem {
	if x != nil {
		return x.AwardItem
	}
	return nil
}

type GetRoundAwardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRoundAwardsReq) Reset() {
	*x = GetRoundAwardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoundAwardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoundAwardsReq) ProtoMessage() {}

func (x *GetRoundAwardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoundAwardsReq.ProtoReflect.Descriptor instead.
func (*GetRoundAwardsReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{17}
}

type GetRoundAwardsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    string       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Awards []*AwardItem `protobuf:"bytes,2,rep,name=awards,proto3" json:"awards,omitempty"`
}

func (x *GetRoundAwardsRsp) Reset() {
	*x = GetRoundAwardsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoundAwardsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoundAwardsRsp) ProtoMessage() {}

func (x *GetRoundAwardsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoundAwardsRsp.ProtoReflect.Descriptor instead.
func (*GetRoundAwardsRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{18}
}

func (x *GetRoundAwardsRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetRoundAwardsRsp) GetAwards() []*AwardItem {
	if x != nil {
		return x.Awards
	}
	return nil
}

type AdNotifyStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdParam string `protobuf:"bytes,1,opt,name=ad_param,json=adParam,proto3" json:"ad_param,omitempty"`
}

func (x *AdNotifyStateReq) Reset() {
	*x = AdNotifyStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNotifyStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNotifyStateReq) ProtoMessage() {}

func (x *AdNotifyStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNotifyStateReq.ProtoReflect.Descriptor instead.
func (*AdNotifyStateReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{19}
}

func (x *AdNotifyStateReq) GetAdParam() string {
	if x != nil {
		return x.AdParam
	}
	return ""
}

type AdNotifyStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AwardList string `protobuf:"bytes,2,opt,name=award_list,json=awardList,proto3" json:"award_list,omitempty"`
}

func (x *AdNotifyStateRsp) Reset() {
	*x = AdNotifyStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNotifyStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNotifyStateRsp) ProtoMessage() {}

func (x *AdNotifyStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNotifyStateRsp.ProtoReflect.Descriptor instead.
func (*AdNotifyStateRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{20}
}

func (x *AdNotifyStateRsp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AdNotifyStateRsp) GetAwardList() string {
	if x != nil {
		return x.AwardList
	}
	return ""
}

type GetSignConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSignConfigReq) Reset() {
	*x = GetSignConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignConfigReq) ProtoMessage() {}

func (x *GetSignConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignConfigReq.ProtoReflect.Descriptor instead.
func (*GetSignConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{21}
}

type SignRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"item_id"
	ItemId int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty" bson:"item_id"`
	//@inject_tag: bson:"item_num"
	ItemNum int32 `protobuf:"varint,2,opt,name=item_num,json=itemNum,proto3" json:"item_num,omitempty" bson:"item_num"`
	//@inject_tag: bson:"multiple_num"
	MultipleNum int32 `protobuf:"varint,3,opt,name=multiple_num,json=multipleNum,proto3" json:"multiple_num,omitempty" bson:"multiple_num"`
}

func (x *SignRewardItem) Reset() {
	*x = SignRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRewardItem) ProtoMessage() {}

func (x *SignRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRewardItem.ProtoReflect.Descriptor instead.
func (*SignRewardItem) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{22}
}

func (x *SignRewardItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SignRewardItem) GetItemNum() int32 {
	if x != nil {
		return x.ItemNum
	}
	return 0
}

func (x *SignRewardItem) GetMultipleNum() int32 {
	if x != nil {
		return x.MultipleNum
	}
	return 0
}

type SignDayConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"day_index"
	DayIndex int32 `protobuf:"varint,1,opt,name=day_index,json=dayIndex,proto3" json:"day_index,omitempty" bson:"day_index"`
	//@inject_tag: bson:"novice_reward_list"
	NoviceRewardList []*SignRewardItem `protobuf:"bytes,2,rep,name=novice_reward_list,json=noviceRewardList,proto3" json:"novice_reward_list,omitempty" bson:"novice_reward_list"`
	//@inject_tag: bson:"reward_list"
	RewardList []*SignRewardItem `protobuf:"bytes,3,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty" bson:"reward_list"`
}

func (x *SignDayConfig) Reset() {
	*x = SignDayConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignDayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignDayConfig) ProtoMessage() {}

func (x *SignDayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignDayConfig.ProtoReflect.Descriptor instead.
func (*SignDayConfig) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{23}
}

func (x *SignDayConfig) GetDayIndex() int32 {
	if x != nil {
		return x.DayIndex
	}
	return 0
}

func (x *SignDayConfig) GetNoviceRewardList() []*SignRewardItem {
	if x != nil {
		return x.NoviceRewardList
	}
	return nil
}

func (x *SignDayConfig) GetRewardList() []*SignRewardItem {
	if x != nil {
		return x.RewardList
	}
	return nil
}

type SignConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"novice_times"
	NoviceTimes int32 `protobuf:"varint,1,opt,name=novice_times,json=noviceTimes,proto3" json:"novice_times,omitempty" bson:"novice_times"`
	//@inject_tag: bson:"ad_aid"
	AdAid int32 `protobuf:"varint,2,opt,name=ad_aid,json=adAid,proto3" json:"ad_aid,omitempty" bson:"ad_aid"`
	//@inject_tag: bson:"list"
	List     []*SignDayConfig `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty" bson:"list"`
	DayIndex int32            `protobuf:"varint,4,opt,name=DayIndex,proto3" json:"DayIndex,omitempty"`
	Receive  int32            `protobuf:"varint,5,opt,name=Receive,proto3" json:"Receive,omitempty"`
	Novice   int32            `protobuf:"varint,6,opt,name=Novice,proto3" json:"Novice,omitempty"`
}

func (x *SignConfig) Reset() {
	*x = SignConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignConfig) ProtoMessage() {}

func (x *SignConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignConfig.ProtoReflect.Descriptor instead.
func (*SignConfig) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{24}
}

func (x *SignConfig) GetNoviceTimes() int32 {
	if x != nil {
		return x.NoviceTimes
	}
	return 0
}

func (x *SignConfig) GetAdAid() int32 {
	if x != nil {
		return x.AdAid
	}
	return 0
}

func (x *SignConfig) GetList() []*SignDayConfig {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SignConfig) GetDayIndex() int32 {
	if x != nil {
		return x.DayIndex
	}
	return 0
}

func (x *SignConfig) GetReceive() int32 {
	if x != nil {
		return x.Receive
	}
	return 0
}

func (x *SignConfig) GetNovice() int32 {
	if x != nil {
		return x.Novice
	}
	return 0
}

type GetSignConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32       `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg  string      `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Config  *SignConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Err     string      `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetSignConfigRsp) Reset() {
	*x = GetSignConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignConfigRsp) ProtoMessage() {}

func (x *GetSignConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignConfigRsp.ProtoReflect.Descriptor instead.
func (*GetSignConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{25}
}

func (x *GetSignConfigRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetSignConfigRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetSignConfigRsp) GetConfig() *SignConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetSignConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetSignRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayIndex     int32 `protobuf:"varint,1,opt,name=day_index,json=dayIndex,proto3" json:"day_index,omitempty"`
	DoubleReward int32 `protobuf:"varint,2,opt,name=double_reward,json=doubleReward,proto3" json:"double_reward,omitempty"`
}

func (x *GetSignRewardReq) Reset() {
	*x = GetSignRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignRewardReq) ProtoMessage() {}

func (x *GetSignRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignRewardReq.ProtoReflect.Descriptor instead.
func (*GetSignRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{26}
}

func (x *GetSignRewardReq) GetDayIndex() int32 {
	if x != nil {
		return x.DayIndex
	}
	return 0
}

func (x *GetSignRewardReq) GetDoubleReward() int32 {
	if x != nil {
		return x.DoubleReward
	}
	return 0
}

type GetSignRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int32        `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg    string       `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	AwardItem []*AwardItem `protobuf:"bytes,3,rep,name=award_item,json=awardItem,proto3" json:"award_item,omitempty"`
	Err       string       `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetSignRewardRsp) Reset() {
	*x = GetSignRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignRewardRsp) ProtoMessage() {}

func (x *GetSignRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignRewardRsp.ProtoReflect.Descriptor instead.
func (*GetSignRewardRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{27}
}

func (x *GetSignRewardRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetSignRewardRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetSignRewardRsp) GetAwardItem() []*AwardItem {
	if x != nil {
		return x.AwardItem
	}
	return nil
}

func (x *GetSignRewardRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetMonthSignConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMonthSignConfigReq) Reset() {
	*x = GetMonthSignConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthSignConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthSignConfigReq) ProtoMessage() {}

func (x *GetMonthSignConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthSignConfigReq.ProtoReflect.Descriptor instead.
func (*GetMonthSignConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{28}
}

type MonthSignDayConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"day_index"
	DayIndex int32 `protobuf:"varint,1,opt,name=day_index,json=dayIndex,proto3" json:"day_index,omitempty" bson:"day_index"`
	//@inject_tag: bson:"novice_reward_list"
	NoviceRewardList []*SignRewardItem `protobuf:"bytes,2,rep,name=novice_reward_list,json=noviceRewardList,proto3" json:"novice_reward_list,omitempty" bson:"novice_reward_list"`
	//@inject_tag: bson:"reward_list"
	RewardList []*SignRewardItem `protobuf:"bytes,3,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty" bson:"reward_list"`
	Receive    int32             `protobuf:"varint,4,opt,name=receive,proto3" json:"receive,omitempty"` //是否领取
}

func (x *MonthSignDayConfig) Reset() {
	*x = MonthSignDayConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthSignDayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthSignDayConfig) ProtoMessage() {}

func (x *MonthSignDayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthSignDayConfig.ProtoReflect.Descriptor instead.
func (*MonthSignDayConfig) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{29}
}

func (x *MonthSignDayConfig) GetDayIndex() int32 {
	if x != nil {
		return x.DayIndex
	}
	return 0
}

func (x *MonthSignDayConfig) GetNoviceRewardList() []*SignRewardItem {
	if x != nil {
		return x.NoviceRewardList
	}
	return nil
}

func (x *MonthSignDayConfig) GetRewardList() []*SignRewardItem {
	if x != nil {
		return x.RewardList
	}
	return nil
}

func (x *MonthSignDayConfig) GetReceive() int32 {
	if x != nil {
		return x.Receive
	}
	return 0
}

type MonthSignConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"ad_aid"
	AdAid int32 `protobuf:"varint,1,opt,name=ad_aid,json=adAid,proto3" json:"ad_aid,omitempty" bson:"ad_aid"`
	//@inject_tag: bson:"list"
	List []*MonthSignDayConfig `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty" bson:"list"`
	//@inject_tag: bson:"month_list"
	MonthList       []*MonthSignDayConfig `protobuf:"bytes,3,rep,name=month_list,json=monthList,proto3" json:"month_list,omitempty" bson:"month_list"` //月累计签到奖励
	TodayWeek       int32                 `protobuf:"varint,4,opt,name=today_week,json=todayWeek,proto3" json:"today_week,omitempty"`
	TotalTimes      int32                 `protobuf:"varint,5,opt,name=total_times,json=totalTimes,proto3" json:"total_times,omitempty"`                  //总领取次数
	TotalMonthTimes int32                 `protobuf:"varint,6,opt,name=total_month_times,json=totalMonthTimes,proto3" json:"total_month_times,omitempty"` //当月领取次数
}

func (x *MonthSignConfig) Reset() {
	*x = MonthSignConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthSignConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthSignConfig) ProtoMessage() {}

func (x *MonthSignConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthSignConfig.ProtoReflect.Descriptor instead.
func (*MonthSignConfig) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{30}
}

func (x *MonthSignConfig) GetAdAid() int32 {
	if x != nil {
		return x.AdAid
	}
	return 0
}

func (x *MonthSignConfig) GetList() []*MonthSignDayConfig {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MonthSignConfig) GetMonthList() []*MonthSignDayConfig {
	if x != nil {
		return x.MonthList
	}
	return nil
}

func (x *MonthSignConfig) GetTodayWeek() int32 {
	if x != nil {
		return x.TodayWeek
	}
	return 0
}

func (x *MonthSignConfig) GetTotalTimes() int32 {
	if x != nil {
		return x.TotalTimes
	}
	return 0
}

func (x *MonthSignConfig) GetTotalMonthTimes() int32 {
	if x != nil {
		return x.TotalMonthTimes
	}
	return 0
}

type GetMonthSignConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    string           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Config *MonthSignConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetMonthSignConfigRsp) Reset() {
	*x = GetMonthSignConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthSignConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthSignConfigRsp) ProtoMessage() {}

func (x *GetMonthSignConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthSignConfigRsp.ProtoReflect.Descriptor instead.
func (*GetMonthSignConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{31}
}

func (x *GetMonthSignConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetMonthSignConfigRsp) GetConfig() *MonthSignConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetMonthSignRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repair   int32 `protobuf:"varint,1,opt,name=repair,proto3" json:"repair,omitempty"`     //1 补签
	Multiple int32 `protobuf:"varint,2,opt,name=multiple,proto3" json:"multiple,omitempty"` //多倍领取
}

func (x *GetMonthSignRewardReq) Reset() {
	*x = GetMonthSignRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthSignRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthSignRewardReq) ProtoMessage() {}

func (x *GetMonthSignRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthSignRewardReq.ProtoReflect.Descriptor instead.
func (*GetMonthSignRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{32}
}

func (x *GetMonthSignRewardReq) GetRepair() int32 {
	if x != nil {
		return x.Repair
	}
	return 0
}

func (x *GetMonthSignRewardReq) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

type GetMonthSignRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       string       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	AwardItem []*AwardItem `protobuf:"bytes,2,rep,name=award_item,json=awardItem,proto3" json:"award_item,omitempty"`
}

func (x *GetMonthSignRewardRsp) Reset() {
	*x = GetMonthSignRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthSignRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthSignRewardRsp) ProtoMessage() {}

func (x *GetMonthSignRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthSignRewardRsp.ProtoReflect.Descriptor instead.
func (*GetMonthSignRewardRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{33}
}

func (x *GetMonthSignRewardRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetMonthSignRewardRsp) GetAwardItem() []*AwardItem {
	if x != nil {
		return x.AwardItem
	}
	return nil
}

//摇金币
type GetRolledCoinsConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRolledCoinsConfigReq) Reset() {
	*x = GetRolledCoinsConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolledCoinsConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolledCoinsConfigReq) ProtoMessage() {}

func (x *GetRolledCoinsConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolledCoinsConfigReq.ProtoReflect.Descriptor instead.
func (*GetRolledCoinsConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{34}
}

type RolledCoinsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"day_times"
	DayTimes int32 `protobuf:"varint,1,opt,name=day_times,json=dayTimes,proto3" json:"day_times,omitempty" bson:"day_times"`
	//@inject_tag: bson:"day_max_times"
	DayMaxTimes int32 `protobuf:"varint,2,opt,name=day_max_times,json=dayMaxTimes,proto3" json:"day_max_times,omitempty" bson:"day_max_times"`
	//@inject_tag: bson:"weight"
	Weight []*RolledCoinsConfig_BoxWeight `protobuf:"bytes,3,rep,name=weight,proto3" json:"weight,omitempty" bson:"weight"`
	//@inject_tag: bson:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	//@inject_tag: bson:"group"
	Group []*RolledCoinsConfig_BoxGroup `protobuf:"bytes,5,rep,name=group,proto3" json:"group,omitempty" bson:"group"`
	//@inject_tag: bson:"no_pay_demotion"
	NoPayDemotion int32 `protobuf:"varint,6,opt,name=no_pay_demotion,json=noPayDemotion,proto3" json:"no_pay_demotion,omitempty" bson:"no_pay_demotion"`
	ReceiveNum    int32 `protobuf:"varint,7,opt,name=receive_num,json=receiveNum,proto3" json:"receive_num,omitempty"` //当日领取次数
}

func (x *RolledCoinsConfig) Reset() {
	*x = RolledCoinsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolledCoinsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolledCoinsConfig) ProtoMessage() {}

func (x *RolledCoinsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolledCoinsConfig.ProtoReflect.Descriptor instead.
func (*RolledCoinsConfig) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{35}
}

func (x *RolledCoinsConfig) GetDayTimes() int32 {
	if x != nil {
		return x.DayTimes
	}
	return 0
}

func (x *RolledCoinsConfig) GetDayMaxTimes() int32 {
	if x != nil {
		return x.DayMaxTimes
	}
	return 0
}

func (x *RolledCoinsConfig) GetWeight() []*RolledCoinsConfig_BoxWeight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *RolledCoinsConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolledCoinsConfig) GetGroup() []*RolledCoinsConfig_BoxGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *RolledCoinsConfig) GetNoPayDemotion() int32 {
	if x != nil {
		return x.NoPayDemotion
	}
	return 0
}

func (x *RolledCoinsConfig) GetReceiveNum() int32 {
	if x != nil {
		return x.ReceiveNum
	}
	return 0
}

type GetRolledCoinsConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    string             `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Config *RolledCoinsConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetRolledCoinsConfigRsp) Reset() {
	*x = GetRolledCoinsConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolledCoinsConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolledCoinsConfigRsp) ProtoMessage() {}

func (x *GetRolledCoinsConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolledCoinsConfigRsp.ProtoReflect.Descriptor instead.
func (*GetRolledCoinsConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{36}
}

func (x *GetRolledCoinsConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetRolledCoinsConfigRsp) GetConfig() *RolledCoinsConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetRolledCoinsRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRolledCoinsRewardReq) Reset() {
	*x = GetRolledCoinsRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolledCoinsRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolledCoinsRewardReq) ProtoMessage() {}

func (x *GetRolledCoinsRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolledCoinsRewardReq.ProtoReflect.Descriptor instead.
func (*GetRolledCoinsRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{37}
}

type GetRolledCoinsRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        string       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	BoxId      int32        `protobuf:"varint,2,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	GroupIndex int32        `protobuf:"varint,3,opt,name=group_index,json=groupIndex,proto3" json:"group_index,omitempty"`
	Rewards    []*AwardItem `protobuf:"bytes,4,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *GetRolledCoinsRewardRsp) Reset() {
	*x = GetRolledCoinsRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolledCoinsRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolledCoinsRewardRsp) ProtoMessage() {}

func (x *GetRolledCoinsRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolledCoinsRewardRsp.ProtoReflect.Descriptor instead.
func (*GetRolledCoinsRewardRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{38}
}

func (x *GetRolledCoinsRewardRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetRolledCoinsRewardRsp) GetBoxId() int32 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *GetRolledCoinsRewardRsp) GetGroupIndex() int32 {
	if x != nil {
		return x.GroupIndex
	}
	return 0
}

func (x *GetRolledCoinsRewardRsp) GetRewards() []*AwardItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type RolledCoinsPayResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPay bool `protobuf:"varint,1,opt,name=is_pay,json=isPay,proto3" json:"is_pay,omitempty"`
}

func (x *RolledCoinsPayResultReq) Reset() {
	*x = RolledCoinsPayResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolledCoinsPayResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolledCoinsPayResultReq) ProtoMessage() {}

func (x *RolledCoinsPayResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolledCoinsPayResultReq.ProtoReflect.Descriptor instead.
func (*RolledCoinsPayResultReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{39}
}

func (x *RolledCoinsPayResultReq) GetIsPay() bool {
	if x != nil {
		return x.IsPay
	}
	return false
}

// 活动状态变更通知
type ActivityStatusNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int32                    `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`                                                                  // 活动ID
	Status     ActivityStatusNot_Status `protobuf:"varint,2,opt,name=status,proto3,enum=activity.ActivityStatusNot_Status" json:"status,omitempty"`                                                     // 当前状态
	Openid     string                   `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`                                                                                             // 玩家ID
	GameGid    string                   `protobuf:"bytes,4,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`                                                                            // 游戏ID
	PlatAid    int32                    `protobuf:"varint,5,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`                                                                           // 平台ID
	Type       ActivityStatusNot_Type   `protobuf:"varint,6,opt,name=type,proto3,enum=activity.ActivityStatusNot_Type" json:"type,omitempty"`                                                           // 活动类型
	UpdateTime int64                    `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                                                                  // 更新时间
	Metadata   map[string]string        `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 相关参数
}

func (x *ActivityStatusNot) Reset() {
	*x = ActivityStatusNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityStatusNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityStatusNot) ProtoMessage() {}

func (x *ActivityStatusNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityStatusNot.ProtoReflect.Descriptor instead.
func (*ActivityStatusNot) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{40}
}

func (x *ActivityStatusNot) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityStatusNot) GetStatus() ActivityStatusNot_Status {
	if x != nil {
		return x.Status
	}
	return ActivityStatusNot_Underway
}

func (x *ActivityStatusNot) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *ActivityStatusNot) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *ActivityStatusNot) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *ActivityStatusNot) GetType() ActivityStatusNot_Type {
	if x != nil {
		return x.Type
	}
	return ActivityStatusNot_Sign
}

func (x *ActivityStatusNot) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ActivityStatusNot) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TollgateCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lv        int32        `protobuf:"varint,1,opt,name=lv,proto3" json:"lv,omitempty"`
	Name      string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon      string       `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Start     int32        `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	End       int32        `protobuf:"varint,5,opt,name=end,proto3" json:"end,omitempty"`
	GateAward []*AwardItem `protobuf:"bytes,6,rep,name=gate_award,json=gateAward,proto3" json:"gate_award,omitempty"`
	LvAward   []*AwardItem `protobuf:"bytes,7,rep,name=lv_award,json=lvAward,proto3" json:"lv_award,omitempty"`
}

func (x *TollgateCfg) Reset() {
	*x = TollgateCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TollgateCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TollgateCfg) ProtoMessage() {}

func (x *TollgateCfg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TollgateCfg.ProtoReflect.Descriptor instead.
func (*TollgateCfg) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{41}
}

func (x *TollgateCfg) GetLv() int32 {
	if x != nil {
		return x.Lv
	}
	return 0
}

func (x *TollgateCfg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TollgateCfg) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TollgateCfg) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TollgateCfg) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *TollgateCfg) GetGateAward() []*AwardItem {
	if x != nil {
		return x.GateAward
	}
	return nil
}

func (x *TollgateCfg) GetLvAward() []*AwardItem {
	if x != nil {
		return x.LvAward
	}
	return nil
}

type GetTollgateConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTollgateConfigReq) Reset() {
	*x = GetTollgateConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTollgateConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTollgateConfigReq) ProtoMessage() {}

func (x *GetTollgateConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTollgateConfigReq.ProtoReflect.Descriptor instead.
func (*GetTollgateConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{42}
}

type GetTollgateConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32          `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg  string         `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	CurGate int32          `protobuf:"varint,3,opt,name=cur_gate,json=curGate,proto3" json:"cur_gate,omitempty"`
	Config  []*TollgateCfg `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty"`
	Err     string         `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetTollgateConfigRsp) Reset() {
	*x = GetTollgateConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTollgateConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTollgateConfigRsp) ProtoMessage() {}

func (x *GetTollgateConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTollgateConfigRsp.ProtoReflect.Descriptor instead.
func (*GetTollgateConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{43}
}

func (x *GetTollgateConfigRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetTollgateConfigRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetTollgateConfigRsp) GetCurGate() int32 {
	if x != nil {
		return x.CurGate
	}
	return 0
}

func (x *GetTollgateConfigRsp) GetConfig() []*TollgateCfg {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetTollgateConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type CrossGateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewGate int32 `protobuf:"varint,1,opt,name=new_gate,json=newGate,proto3" json:"new_gate,omitempty"`
}

func (x *CrossGateReq) Reset() {
	*x = CrossGateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossGateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossGateReq) ProtoMessage() {}

func (x *CrossGateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossGateReq.ProtoReflect.Descriptor instead.
func (*CrossGateReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{44}
}

func (x *CrossGateReq) GetNewGate() int32 {
	if x != nil {
		return x.NewGate
	}
	return 0
}

type CrossGateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int32        `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg    string       `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	GateAward []*AwardItem `protobuf:"bytes,3,rep,name=gate_award,json=gateAward,proto3" json:"gate_award,omitempty"`
	Err       string       `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *CrossGateRsp) Reset() {
	*x = CrossGateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossGateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossGateRsp) ProtoMessage() {}

func (x *CrossGateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossGateRsp.ProtoReflect.Descriptor instead.
func (*CrossGateRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{45}
}

func (x *CrossGateRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CrossGateRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *CrossGateRsp) GetGateAward() []*AwardItem {
	if x != nil {
		return x.GateAward
	}
	return nil
}

func (x *CrossGateRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type CrossGateNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid     string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameGid    string `protobuf:"bytes,2,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
	PlatAid    int32  `protobuf:"varint,3,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	Gate       int32  `protobuf:"varint,4,opt,name=gate,proto3" json:"gate,omitempty"`
	UpdateTime int64  `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *CrossGateNot) Reset() {
	*x = CrossGateNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossGateNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossGateNot) ProtoMessage() {}

func (x *CrossGateNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossGateNot.ProtoReflect.Descriptor instead.
func (*CrossGateNot) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{46}
}

func (x *CrossGateNot) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *CrossGateNot) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *CrossGateNot) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *CrossGateNot) GetGate() int32 {
	if x != nil {
		return x.Gate
	}
	return 0
}

func (x *CrossGateNot) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type GetLvAwardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewLv    int32 `protobuf:"varint,1,opt,name=new_lv,json=newLv,proto3" json:"new_lv,omitempty"`
	IsDouble int32 `protobuf:"varint,2,opt,name=is_double,json=isDouble,proto3" json:"is_double,omitempty"`
}

func (x *GetLvAwardsReq) Reset() {
	*x = GetLvAwardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLvAwardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLvAwardsReq) ProtoMessage() {}

func (x *GetLvAwardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLvAwardsReq.ProtoReflect.Descriptor instead.
func (*GetLvAwardsReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{47}
}

func (x *GetLvAwardsReq) GetNewLv() int32 {
	if x != nil {
		return x.NewLv
	}
	return 0
}

func (x *GetLvAwardsReq) GetIsDouble() int32 {
	if x != nil {
		return x.IsDouble
	}
	return 0
}

type GetLvAwardsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32        `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg  string       `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	LvAward []*AwardItem `protobuf:"bytes,3,rep,name=lv_award,json=lvAward,proto3" json:"lv_award,omitempty"`
	Err     string       `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetLvAwardsRsp) Reset() {
	*x = GetLvAwardsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLvAwardsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLvAwardsRsp) ProtoMessage() {}

func (x *GetLvAwardsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLvAwardsRsp.ProtoReflect.Descriptor instead.
func (*GetLvAwardsRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{48}
}

func (x *GetLvAwardsRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetLvAwardsRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetLvAwardsRsp) GetLvAward() []*AwardItem {
	if x != nil {
		return x.LvAward
	}
	return nil
}

func (x *GetLvAwardsRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type TollgateRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank      int32  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	LastRank  int32  `protobuf:"varint,2,opt,name=last_rank,json=lastRank,proto3" json:"last_rank,omitempty"`
	Openid    string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname  string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	HeadImage string `protobuf:"bytes,5,opt,name=head_image,json=headImage,proto3" json:"head_image,omitempty"`
	Gate      int32  `protobuf:"varint,6,opt,name=gate,proto3" json:"gate,omitempty"`
}

func (x *TollgateRank) Reset() {
	*x = TollgateRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TollgateRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TollgateRank) ProtoMessage() {}

func (x *TollgateRank) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TollgateRank.ProtoReflect.Descriptor instead.
func (*TollgateRank) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{49}
}

func (x *TollgateRank) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *TollgateRank) GetLastRank() int32 {
	if x != nil {
		return x.LastRank
	}
	return 0
}

func (x *TollgateRank) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *TollgateRank) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *TollgateRank) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *TollgateRank) GetGate() int32 {
	if x != nil {
		return x.Gate
	}
	return 0
}

type GetTollgateRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageIdx  int32 `protobuf:"varint,2,opt,name=page_idx,json=pageIdx,proto3" json:"page_idx,omitempty"`
}

func (x *GetTollgateRankReq) Reset() {
	*x = GetTollgateRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTollgateRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTollgateRankReq) ProtoMessage() {}

func (x *GetTollgateRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTollgateRankReq.ProtoReflect.Descriptor instead.
func (*GetTollgateRankReq) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{50}
}

func (x *GetTollgateRankReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetTollgateRankReq) GetPageIdx() int32 {
	if x != nil {
		return x.PageIdx
	}
	return 0
}

type GetTollgateRankRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32           `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg  string          `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	PageIdx int32           `protobuf:"varint,3,opt,name=page_idx,json=pageIdx,proto3" json:"page_idx,omitempty"`
	Self    *TollgateRank   `protobuf:"bytes,4,opt,name=self,proto3" json:"self,omitempty"`
	Ranks   []*TollgateRank `protobuf:"bytes,5,rep,name=ranks,proto3" json:"ranks,omitempty"`
	RankNum int64           `protobuf:"varint,6,opt,name=rank_num,json=rankNum,proto3" json:"rank_num,omitempty"`
	Err     string          `protobuf:"bytes,7,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetTollgateRankRsp) Reset() {
	*x = GetTollgateRankRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTollgateRankRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTollgateRankRsp) ProtoMessage() {}

func (x *GetTollgateRankRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTollgateRankRsp.ProtoReflect.Descriptor instead.
func (*GetTollgateRankRsp) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{51}
}

func (x *GetTollgateRankRsp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetTollgateRankRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetTollgateRankRsp) GetPageIdx() int32 {
	if x != nil {
		return x.PageIdx
	}
	return 0
}

func (x *GetTollgateRankRsp) GetSelf() *TollgateRank {
	if x != nil {
		return x.Self
	}
	return nil
}

func (x *GetTollgateRankRsp) GetRanks() []*TollgateRank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *GetTollgateRankRsp) GetRankNum() int64 {
	if x != nil {
		return x.RankNum
	}
	return 0
}

func (x *GetTollgateRankRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type ActivityConfig_FixWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times      int32     `protobuf:"varint,1,opt,name=times,proto3" json:"times,omitempty"`
	StartTimes int32     `protobuf:"varint,2,opt,name=start_times,json=startTimes,proto3" json:"start_times,omitempty"`
	EndTimes   int32     `protobuf:"varint,3,opt,name=end_times,json=endTimes,proto3" json:"end_times,omitempty"`
	Weight     []*Weight `protobuf:"bytes,4,rep,name=weight,proto3" json:"weight,omitempty"`
	EveryTime  int32     `protobuf:"varint,5,opt,name=every_time,json=everyTime,proto3" json:"every_time,omitempty"`
}

func (x *ActivityConfig_FixWeight) Reset() {
	*x = ActivityConfig_FixWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConfig_FixWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConfig_FixWeight) ProtoMessage() {}

func (x *ActivityConfig_FixWeight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConfig_FixWeight.ProtoReflect.Descriptor instead.
func (*ActivityConfig_FixWeight) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ActivityConfig_FixWeight) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *ActivityConfig_FixWeight) GetStartTimes() int32 {
	if x != nil {
		return x.StartTimes
	}
	return 0
}

func (x *ActivityConfig_FixWeight) GetEndTimes() int32 {
	if x != nil {
		return x.EndTimes
	}
	return 0
}

func (x *ActivityConfig_FixWeight) GetWeight() []*Weight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *ActivityConfig_FixWeight) GetEveryTime() int32 {
	if x != nil {
		return x.EveryTime
	}
	return 0
}

type RolledCoinsConfig_BoxWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"box_id"
	BoxId int32 `protobuf:"varint,1,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty" bson:"box_id"`
	//@inject_tag: bson:"weight"
	Weight int32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty" bson:"weight"`
	//@inject_tag: bson:"desc"
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty" bson:"desc"`
}

func (x *RolledCoinsConfig_BoxWeight) Reset() {
	*x = RolledCoinsConfig_BoxWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolledCoinsConfig_BoxWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolledCoinsConfig_BoxWeight) ProtoMessage() {}

func (x *RolledCoinsConfig_BoxWeight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolledCoinsConfig_BoxWeight.ProtoReflect.Descriptor instead.
func (*RolledCoinsConfig_BoxWeight) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{35, 0}
}

func (x *RolledCoinsConfig_BoxWeight) GetBoxId() int32 {
	if x != nil {
		return x.BoxId
	}
	return 0
}

func (x *RolledCoinsConfig_BoxWeight) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RolledCoinsConfig_BoxWeight) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type RolledCoinsConfig_BoxGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"index"
	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty" bson:"index"`
	//@inject_tag: bson:"rewards"
	Rewards []*AwardItem `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty" bson:"rewards"`
}

func (x *RolledCoinsConfig_BoxGroup) Reset() {
	*x = RolledCoinsConfig_BoxGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_activity_proto_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolledCoinsConfig_BoxGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolledCoinsConfig_BoxGroup) ProtoMessage() {}

func (x *RolledCoinsConfig_BoxGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_activity_proto_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolledCoinsConfig_BoxGroup.ProtoReflect.Descriptor instead.
func (*RolledCoinsConfig_BoxGroup) Descriptor() ([]byte, []int) {
	return file_proto_activity_proto_proto_rawDescGZIP(), []int{35, 1}
}

func (x *RolledCoinsConfig_BoxGroup) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RolledCoinsConfig_BoxGroup) GetRewards() []*AwardItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

var File_proto_activity_proto_proto protoreflect.FileDescriptor

var file_proto_activity_proto_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x3f, 0x0a, 0x09, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d,
	0x22, 0xab, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x69,
	0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x22, 0x82,
	0x01, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x30, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0x93, 0x07, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x64, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x64, 0x41, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x35, 0x0a, 0x0d, 0x6e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x6e, 0x6f, 0x76, 0x69, 0x63,
	0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x66, 0x69, 0x78, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x09, 0x66, 0x69, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x64, 0x61, 0x79, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x6f, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0xa8,
	0x01, 0x0a, 0x09, 0x46, 0x69, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x22, 0xa3, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x32, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x52, 0x0a, 0x15, 0x43, 0x6f, 0x70,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0b, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x22, 0x4b, 0x0a,
	0x15, 0x43, 0x6f, 0x70, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x45, 0x0a, 0x0c, 0x50, 0x6f,
	0x6b, 0x65, 0x72, 0x43, 0x72, 0x61, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x75, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73,
	0x73, 0x22, 0xda, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x61, 0x70, 0x52,
	0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75,
	0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x2e,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x78, 0x5f, 0x67, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x78, 0x47, 0x69, 0x64, 0x22, 0x5b,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x13, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x22, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x10, 0x41, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x22, 0x67,
	0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x79,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x46, 0x0a, 0x12, 0x6e, 0x6f, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x6e, 0x6f,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x0a, 0x53, 0x69,
	0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x64, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x64, 0x41,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x22, 0x86, 0x01,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61,
	0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x8c, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x22, 0xce, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69,
	0x67, 0x6e, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x61, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x46, 0x0a, 0x12, 0x6e, 0x6f, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10,
	0x6e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53,
	0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x64, 0x5f,
	0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x64, 0x41, 0x69, 0x64,
	0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0x5d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x22, 0xcd, 0x03, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x61, 0x79, 0x4d,
	0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x6f, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x6f, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x79,
	0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6e, 0x6f, 0x50, 0x61, 0x79, 0x44, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x1a,
	0x4e, 0x0a, 0x09, 0x42, 0x6f, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f,
	0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x1a,
	0x4f, 0x0a, 0x08, 0x42, 0x6f, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x60, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69,
	0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x33, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22, 0x92, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x78,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x22, 0x30, 0x0a, 0x17, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x50, 0x61, 0x79, 0x22, 0xe0, 0x03, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c,
	0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x25, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x6e,
	0x64, 0x65, 0x72, 0x77, 0x61, 0x79, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x22, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x10, 0x02, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x54, 0x6f, 0x6c, 0x6c,
	0x67, 0x61, 0x74, 0x65, 0x43, 0x66, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6c,
	0x76, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x07, 0x6c, 0x76, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x47, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43,
	0x66, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x29, 0x0a, 0x0c,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6e, 0x65, 0x77, 0x47, 0x61, 0x74, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x47, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x0a,
	0x67, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x47, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x41, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x76, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x5f,
	0x6c, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x4c, 0x76, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0x86, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4c, 0x76, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x76, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6c, 0x76, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x61, 0x74, 0x65, 0x22, 0x4c,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x22, 0xea, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x78, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x6f, 0x6c, 0x6c,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x2c,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x2a, 0x60, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x75, 0x72, 0x6e, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x69, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x10, 0x05, 0x32, 0xf4, 0x04, 0x0a, 0x08,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x1b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d,
	0x41, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12, 0x43, 0x6f, 0x70, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x09, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x61, 0x70, 0x12, 0x16,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43,
	0x72, 0x61, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x61, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x32, 0xd0, 0x02, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x49, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x32, 0x9b, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x21, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x14, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x32, 0xb6, 0x02, 0x0a, 0x08, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65,
	0x12, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x09, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x47, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x47, 0x61, 0x74,
	0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x76, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x76, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x76,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1c,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c,
	0x6c, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_activity_proto_proto_rawDescOnce sync.Once
	file_proto_activity_proto_proto_rawDescData = file_proto_activity_proto_proto_rawDesc
)

func file_proto_activity_proto_proto_rawDescGZIP() []byte {
	file_proto_activity_proto_proto_rawDescOnce.Do(func() {
		file_proto_activity_proto_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_activity_proto_proto_rawDescData)
	})
	return file_proto_activity_proto_proto_rawDescData
}

var file_proto_activity_proto_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_activity_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_proto_activity_proto_proto_goTypes = []interface{}{
	(ActivityType)(0),                   // 0: activity.ActivityType
	(ActivityStatusNot_Status)(0),       // 1: activity.ActivityStatusNot.Status
	(ActivityStatusNot_Type)(0),         // 2: activity.ActivityStatusNot.Type
	(*Empty)(nil),                       // 3: activity.Empty
	(*AwardItem)(nil),                   // 4: activity.AwardItem
	(*RewardItem)(nil),                  // 5: activity.RewardItem
	(*Weight)(nil),                      // 6: activity.Weight
	(*ActivityConfig)(nil),              // 7: activity.ActivityConfig
	(*GetActivityConfigReq)(nil),        // 8: activity.GetActivityConfigReq
	(*GetActivityConfigRsp)(nil),        // 9: activity.GetActivityConfigRsp
	(*GetRewardReq)(nil),                // 10: activity.GetRewardReq
	(*GetRewardRsp)(nil),                // 11: activity.GetRewardRsp
	(*GetDelayRewardReq)(nil),           // 12: activity.GetDelayRewardReq
	(*GetDelayRewardRsp)(nil),           // 13: activity.GetDelayRewardRsp
	(*CopyActivityConfigReq)(nil),       // 14: activity.CopyActivityConfigReq
	(*CopyActivityConfigRsp)(nil),       // 15: activity.CopyActivityConfigRsp
	(*PokerCrapReq)(nil),                // 16: activity.PokerCrapReq
	(*PokerCrapRsp)(nil),                // 17: activity.PokerCrapRsp
	(*GetShopPayResultReq)(nil),         // 18: activity.GetShopPayResultReq
	(*GetShopPayResultRsp)(nil),         // 19: activity.GetShopPayResultRsp
	(*GetRoundAwardsReq)(nil),           // 20: activity.GetRoundAwardsReq
	(*GetRoundAwardsRsp)(nil),           // 21: activity.GetRoundAwardsRsp
	(*AdNotifyStateReq)(nil),            // 22: activity.AdNotifyStateReq
	(*AdNotifyStateRsp)(nil),            // 23: activity.AdNotifyStateRsp
	(*GetSignConfigReq)(nil),            // 24: activity.GetSignConfigReq
	(*SignRewardItem)(nil),              // 25: activity.SignRewardItem
	(*SignDayConfig)(nil),               // 26: activity.SignDayConfig
	(*SignConfig)(nil),                  // 27: activity.SignConfig
	(*GetSignConfigRsp)(nil),            // 28: activity.GetSignConfigRsp
	(*GetSignRewardReq)(nil),            // 29: activity.GetSignRewardReq
	(*GetSignRewardRsp)(nil),            // 30: activity.GetSignRewardRsp
	(*GetMonthSignConfigReq)(nil),       // 31: activity.GetMonthSignConfigReq
	(*MonthSignDayConfig)(nil),          // 32: activity.MonthSignDayConfig
	(*MonthSignConfig)(nil),             // 33: activity.MonthSignConfig
	(*GetMonthSignConfigRsp)(nil),       // 34: activity.GetMonthSignConfigRsp
	(*GetMonthSignRewardReq)(nil),       // 35: activity.GetMonthSignRewardReq
	(*GetMonthSignRewardRsp)(nil),       // 36: activity.GetMonthSignRewardRsp
	(*GetRolledCoinsConfigReq)(nil),     // 37: activity.GetRolledCoinsConfigReq
	(*RolledCoinsConfig)(nil),           // 38: activity.RolledCoinsConfig
	(*GetRolledCoinsConfigRsp)(nil),     // 39: activity.GetRolledCoinsConfigRsp
	(*GetRolledCoinsRewardReq)(nil),     // 40: activity.GetRolledCoinsRewardReq
	(*GetRolledCoinsRewardRsp)(nil),     // 41: activity.GetRolledCoinsRewardRsp
	(*RolledCoinsPayResultReq)(nil),     // 42: activity.RolledCoinsPayResultReq
	(*ActivityStatusNot)(nil),           // 43: activity.ActivityStatusNot
	(*TollgateCfg)(nil),                 // 44: activity.TollgateCfg
	(*GetTollgateConfigReq)(nil),        // 45: activity.GetTollgateConfigReq
	(*GetTollgateConfigRsp)(nil),        // 46: activity.GetTollgateConfigRsp
	(*CrossGateReq)(nil),                // 47: activity.CrossGateReq
	(*CrossGateRsp)(nil),                // 48: activity.CrossGateRsp
	(*CrossGateNot)(nil),                // 49: activity.CrossGateNot
	(*GetLvAwardsReq)(nil),              // 50: activity.GetLvAwardsReq
	(*GetLvAwardsRsp)(nil),              // 51: activity.GetLvAwardsRsp
	(*TollgateRank)(nil),                // 52: activity.TollgateRank
	(*GetTollgateRankReq)(nil),          // 53: activity.GetTollgateRankReq
	(*GetTollgateRankRsp)(nil),          // 54: activity.GetTollgateRankRsp
	(*ActivityConfig_FixWeight)(nil),    // 55: activity.ActivityConfig.FixWeight
	(*RolledCoinsConfig_BoxWeight)(nil), // 56: activity.RolledCoinsConfig.BoxWeight
	(*RolledCoinsConfig_BoxGroup)(nil),  // 57: activity.RolledCoinsConfig.BoxGroup
	nil,                                 // 58: activity.ActivityStatusNot.MetadataEntry
}
var file_proto_activity_proto_proto_depIdxs = []int32{
	5,  // 0: activity.Weight.rewards:type_name -> activity.RewardItem
	4,  // 1: activity.Weight.user_item:type_name -> activity.AwardItem
	6,  // 2: activity.ActivityConfig.weight:type_name -> activity.Weight
	6,  // 3: activity.ActivityConfig.novice_weight:type_name -> activity.Weight
	55, // 4: activity.ActivityConfig.fix_weight:type_name -> activity.ActivityConfig.FixWeight
	4,  // 5: activity.ActivityConfig.cost_item:type_name -> activity.AwardItem
	4,  // 6: activity.ActivityConfig.awards:type_name -> activity.AwardItem
	7,  // 7: activity.GetActivityConfigRsp.configs:type_name -> activity.ActivityConfig
	4,  // 8: activity.GetRewardRsp.award_item:type_name -> activity.AwardItem
	4,  // 9: activity.GetDelayRewardRsp.award_item:type_name -> activity.AwardItem
	4,  // 10: activity.PokerCrapRsp.award_item:type_name -> activity.AwardItem
	4,  // 11: activity.GetShopPayResultRsp.award_item:type_name -> activity.AwardItem
	4,  // 12: activity.GetRoundAwardsRsp.awards:type_name -> activity.AwardItem
	25, // 13: activity.SignDayConfig.novice_reward_list:type_name -> activity.SignRewardItem
	25, // 14: activity.SignDayConfig.reward_list:type_name -> activity.SignRewardItem
	26, // 15: activity.SignConfig.list:type_name -> activity.SignDayConfig
	27, // 16: activity.GetSignConfigRsp.config:type_name -> activity.SignConfig
	4,  // 17: activity.GetSignRewardRsp.award_item:type_name -> activity.AwardItem
	25, // 18: activity.MonthSignDayConfig.novice_reward_list:type_name -> activity.SignRewardItem
	25, // 19: activity.MonthSignDayConfig.reward_list:type_name -> activity.SignRewardItem
	32, // 20: activity.MonthSignConfig.list:type_name -> activity.MonthSignDayConfig
	32, // 21: activity.MonthSignConfig.month_list:type_name -> activity.MonthSignDayConfig
	33, // 22: activity.GetMonthSignConfigRsp.config:type_name -> activity.MonthSignConfig
	4,  // 23: activity.GetMonthSignRewardRsp.award_item:type_name -> activity.AwardItem
	56, // 24: activity.RolledCoinsConfig.weight:type_name -> activity.RolledCoinsConfig.BoxWeight
	57, // 25: activity.RolledCoinsConfig.group:type_name -> activity.RolledCoinsConfig.BoxGroup
	38, // 26: activity.GetRolledCoinsConfigRsp.config:type_name -> activity.RolledCoinsConfig
	4,  // 27: activity.GetRolledCoinsRewardRsp.rewards:type_name -> activity.AwardItem
	1,  // 28: activity.ActivityStatusNot.status:type_name -> activity.ActivityStatusNot.Status
	2,  // 29: activity.ActivityStatusNot.type:type_name -> activity.ActivityStatusNot.Type
	58, // 30: activity.ActivityStatusNot.metadata:type_name -> activity.ActivityStatusNot.MetadataEntry
	4,  // 31: activity.TollgateCfg.gate_award:type_name -> activity.AwardItem
	4,  // 32: activity.TollgateCfg.lv_award:type_name -> activity.AwardItem
	44, // 33: activity.GetTollgateConfigRsp.config:type_name -> activity.TollgateCfg
	4,  // 34: activity.CrossGateRsp.gate_award:type_name -> activity.AwardItem
	4,  // 35: activity.GetLvAwardsRsp.lv_award:type_name -> activity.AwardItem
	52, // 36: activity.GetTollgateRankRsp.self:type_name -> activity.TollgateRank
	52, // 37: activity.GetTollgateRankRsp.ranks:type_name -> activity.TollgateRank
	6,  // 38: activity.ActivityConfig.FixWeight.weight:type_name -> activity.Weight
	4,  // 39: activity.RolledCoinsConfig.BoxGroup.rewards:type_name -> activity.AwardItem
	8,  // 40: activity.Activity.GetActivityConfig:input_type -> activity.GetActivityConfigReq
	10, // 41: activity.Activity.GetReward:input_type -> activity.GetRewardReq
	12, // 42: activity.Activity.GetDelayReward:input_type -> activity.GetDelayRewardReq
	22, // 43: activity.Activity.AdNotifyState:input_type -> activity.AdNotifyStateReq
	14, // 44: activity.Activity.CopyActivityConfig:input_type -> activity.CopyActivityConfigReq
	16, // 45: activity.Activity.PokerCrap:input_type -> activity.PokerCrapReq
	18, // 46: activity.Activity.GetShopPayResult:input_type -> activity.GetShopPayResultReq
	20, // 47: activity.Activity.GetRoundAwards:input_type -> activity.GetRoundAwardsReq
	24, // 48: activity.Sign.GetSignConfig:input_type -> activity.GetSignConfigReq
	29, // 49: activity.Sign.GetSignReward:input_type -> activity.GetSignRewardReq
	31, // 50: activity.Sign.GetMonthSignConfig:input_type -> activity.GetMonthSignConfigReq
	35, // 51: activity.Sign.GetMonthSignReward:input_type -> activity.GetMonthSignRewardReq
	37, // 52: activity.RolledCoins.GetRolledCoinsConfig:input_type -> activity.GetRolledCoinsConfigReq
	40, // 53: activity.RolledCoins.GetRolledCoinsReward:input_type -> activity.GetRolledCoinsRewardReq
	42, // 54: activity.RolledCoins.RolledCoinsPayResult:input_type -> activity.RolledCoinsPayResultReq
	45, // 55: activity.Tollgate.GetTollgateConfig:input_type -> activity.GetTollgateConfigReq
	47, // 56: activity.Tollgate.CrossGate:input_type -> activity.CrossGateReq
	50, // 57: activity.Tollgate.GetLvAwards:input_type -> activity.GetLvAwardsReq
	53, // 58: activity.Tollgate.GetTollgateRank:input_type -> activity.GetTollgateRankReq
	9,  // 59: activity.Activity.GetActivityConfig:output_type -> activity.GetActivityConfigRsp
	11, // 60: activity.Activity.GetReward:output_type -> activity.GetRewardRsp
	13, // 61: activity.Activity.GetDelayReward:output_type -> activity.GetDelayRewardRsp
	23, // 62: activity.Activity.AdNotifyState:output_type -> activity.AdNotifyStateRsp
	15, // 63: activity.Activity.CopyActivityConfig:output_type -> activity.CopyActivityConfigRsp
	17, // 64: activity.Activity.PokerCrap:output_type -> activity.PokerCrapRsp
	19, // 65: activity.Activity.GetShopPayResult:output_type -> activity.GetShopPayResultRsp
	21, // 66: activity.Activity.GetRoundAwards:output_type -> activity.GetRoundAwardsRsp
	28, // 67: activity.Sign.GetSignConfig:output_type -> activity.GetSignConfigRsp
	30, // 68: activity.Sign.GetSignReward:output_type -> activity.GetSignRewardRsp
	34, // 69: activity.Sign.GetMonthSignConfig:output_type -> activity.GetMonthSignConfigRsp
	36, // 70: activity.Sign.GetMonthSignReward:output_type -> activity.GetMonthSignRewardRsp
	39, // 71: activity.RolledCoins.GetRolledCoinsConfig:output_type -> activity.GetRolledCoinsConfigRsp
	41, // 72: activity.RolledCoins.GetRolledCoinsReward:output_type -> activity.GetRolledCoinsRewardRsp
	3,  // 73: activity.RolledCoins.RolledCoinsPayResult:output_type -> activity.Empty
	46, // 74: activity.Tollgate.GetTollgateConfig:output_type -> activity.GetTollgateConfigRsp
	48, // 75: activity.Tollgate.CrossGate:output_type -> activity.CrossGateRsp
	51, // 76: activity.Tollgate.GetLvAwards:output_type -> activity.GetLvAwardsRsp
	54, // 77: activity.Tollgate.GetTollgateRank:output_type -> activity.GetTollgateRankRsp
	59, // [59:78] is the sub-list for method output_type
	40, // [40:59] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_proto_activity_proto_proto_init() }
func file_proto_activity_proto_proto_init() {
	if File_proto_activity_proto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_activity_proto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelayRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelayRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyActivityConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyActivityConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PokerCrapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PokerCrapRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopPayResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopPayResultRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoundAwardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoundAwardsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdNotifyStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdNotifyStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignDayConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthSignConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthSignDayConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthSignConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthSignConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthSignRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthSignRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolledCoinsConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolledCoinsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolledCoinsConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolledCoinsRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolledCoinsRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolledCoinsPayResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityStatusNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TollgateCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTollgateConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTollgateConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossGateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossGateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossGateNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLvAwardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLvAwardsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TollgateRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTollgateRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTollgateRankRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityConfig_FixWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolledCoinsConfig_BoxWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_activity_proto_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolledCoinsConfig_BoxGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_activity_proto_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_proto_activity_proto_proto_goTypes,
		DependencyIndexes: file_proto_activity_proto_proto_depIdxs,
		EnumInfos:         file_proto_activity_proto_proto_enumTypes,
		MessageInfos:      file_proto_activity_proto_proto_msgTypes,
	}.Build()
	File_proto_activity_proto_proto = out.File
	file_proto_activity_proto_proto_rawDesc = nil
	file_proto_activity_proto_proto_goTypes = nil
	file_proto_activity_proto_proto_depIdxs = nil
}
