// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: proto/vip_privilege_proto.proto

package activity

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetVipPrivilegeConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVipPrivilegeConfigReq) Reset() {
	*x = GetVipPrivilegeConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipPrivilegeConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipPrivilegeConfigReq) ProtoMessage() {}

func (x *GetVipPrivilegeConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipPrivilegeConfigReq.ProtoReflect.Descriptor instead.
func (*GetVipPrivilegeConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{0}
}

type GetVipPrivilegeConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err           string                            `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	List          []*GetVipPrivilegeConfigRsp_Right `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	TodayRoundExp int32                             `protobuf:"varint,3,opt,name=today_round_exp,json=todayRoundExp,proto3" json:"today_round_exp,omitempty"`
}

func (x *GetVipPrivilegeConfigRsp) Reset() {
	*x = GetVipPrivilegeConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipPrivilegeConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipPrivilegeConfigRsp) ProtoMessage() {}

func (x *GetVipPrivilegeConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipPrivilegeConfigRsp.ProtoReflect.Descriptor instead.
func (*GetVipPrivilegeConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{1}
}

func (x *GetVipPrivilegeConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetVipPrivilegeConfigRsp) GetList() []*GetVipPrivilegeConfigRsp_Right {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetVipPrivilegeConfigRsp) GetTodayRoundExp() int32 {
	if x != nil {
		return x.TodayRoundExp
	}
	return 0
}

type GetVipPrivilegeRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *GetVipPrivilegeRewardReq) Reset() {
	*x = GetVipPrivilegeRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipPrivilegeRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipPrivilegeRewardReq) ProtoMessage() {}

func (x *GetVipPrivilegeRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipPrivilegeRewardReq.ProtoReflect.Descriptor instead.
func (*GetVipPrivilegeRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{2}
}

func (x *GetVipPrivilegeRewardReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type GetVipPrivilegeRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       string       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	AwardItem []*AwardItem `protobuf:"bytes,4,rep,name=award_item,json=awardItem,proto3" json:"award_item,omitempty"`
}

func (x *GetVipPrivilegeRewardRsp) Reset() {
	*x = GetVipPrivilegeRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipPrivilegeRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipPrivilegeRewardRsp) ProtoMessage() {}

func (x *GetVipPrivilegeRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipPrivilegeRewardRsp.ProtoReflect.Descriptor instead.
func (*GetVipPrivilegeRewardRsp) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{3}
}

func (x *GetVipPrivilegeRewardRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetVipPrivilegeRewardRsp) GetAwardItem() []*AwardItem {
	if x != nil {
		return x.AwardItem
	}
	return nil
}

type GetPlayerVipPrivilegeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerVipPrivilegeReq) Reset() {
	*x = GetPlayerVipPrivilegeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerVipPrivilegeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerVipPrivilegeReq) ProtoMessage() {}

func (x *GetPlayerVipPrivilegeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerVipPrivilegeReq.ProtoReflect.Descriptor instead.
func (*GetPlayerVipPrivilegeReq) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{4}
}

type GetPlayerVipPrivilegeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	//@inject_tag: bson:"level"
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty" bson:"level"`
	//@inject_tag: bson:"remedies_times"
	RemediesTimes int32 `protobuf:"varint,3,opt,name=remedies_times,json=remediesTimes,proto3" json:"remedies_times,omitempty" bson:"remedies_times"`
	//@inject_tag: bson:"remedies_multiple"
	RemediesMultiple float64 `protobuf:"fixed64,4,opt,name=remedies_multiple,json=remediesMultiple,proto3" json:"remedies_multiple,omitempty" bson:"remedies_multiple"`
	//@inject_tag: bson:"exchange_gold"
	ExchangeGold float64 `protobuf:"fixed64,5,opt,name=exchange_gold,json=exchangeGold,proto3" json:"exchange_gold,omitempty" bson:"exchange_gold"`
	//@inject_tag: bson:"wheel_gold"
	WheelGold float64 `protobuf:"fixed64,6,opt,name=wheel_gold,json=wheelGold,proto3" json:"wheel_gold,omitempty" bson:"wheel_gold"`
	//@inject_tag: bson:"avoid_loss_pro"
	AvoidLossPro float64 `protobuf:"fixed64,7,opt,name=avoid_loss_pro,json=avoidLossPro,proto3" json:"avoid_loss_pro,omitempty" bson:"avoid_loss_pro"`
}

func (x *GetPlayerVipPrivilegeRsp) Reset() {
	*x = GetPlayerVipPrivilegeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerVipPrivilegeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerVipPrivilegeRsp) ProtoMessage() {}

func (x *GetPlayerVipPrivilegeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerVipPrivilegeRsp.ProtoReflect.Descriptor instead.
func (*GetPlayerVipPrivilegeRsp) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{5}
}

func (x *GetPlayerVipPrivilegeRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetPlayerVipPrivilegeRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetPlayerVipPrivilegeRsp) GetRemediesTimes() int32 {
	if x != nil {
		return x.RemediesTimes
	}
	return 0
}

func (x *GetPlayerVipPrivilegeRsp) GetRemediesMultiple() float64 {
	if x != nil {
		return x.RemediesMultiple
	}
	return 0
}

func (x *GetPlayerVipPrivilegeRsp) GetExchangeGold() float64 {
	if x != nil {
		return x.ExchangeGold
	}
	return 0
}

func (x *GetPlayerVipPrivilegeRsp) GetWheelGold() float64 {
	if x != nil {
		return x.WheelGold
	}
	return 0
}

func (x *GetPlayerVipPrivilegeRsp) GetAvoidLossPro() float64 {
	if x != nil {
		return x.AvoidLossPro
	}
	return 0
}

type GetVipPrivilegeConfigRsp_Desc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	//@inject_tag: bson:"new"
	New int32 `protobuf:"varint,2,opt,name=new,proto3" json:"new,omitempty" bson:"new"`
	//@inject_tag: bson:"update"
	Update int32 `protobuf:"varint,3,opt,name=update,proto3" json:"update,omitempty" bson:"update"`
}

func (x *GetVipPrivilegeConfigRsp_Desc) Reset() {
	*x = GetVipPrivilegeConfigRsp_Desc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipPrivilegeConfigRsp_Desc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipPrivilegeConfigRsp_Desc) ProtoMessage() {}

func (x *GetVipPrivilegeConfigRsp_Desc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipPrivilegeConfigRsp_Desc.ProtoReflect.Descriptor instead.
func (*GetVipPrivilegeConfigRsp_Desc) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetVipPrivilegeConfigRsp_Desc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVipPrivilegeConfigRsp_Desc) GetNew() int32 {
	if x != nil {
		return x.New
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Desc) GetUpdate() int32 {
	if x != nil {
		return x.Update
	}
	return 0
}

type GetVipPrivilegeConfigRsp_Right struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: bson:"level"
	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty" bson:"level"`
	//@inject_tag: bson:"experience"
	Experience int32 `protobuf:"varint,2,opt,name=experience,proto3" json:"experience,omitempty" bson:"experience"`
	//@inject_tag: bson:"remedies_times"
	RemediesTimes int32 `protobuf:"varint,3,opt,name=remedies_times,json=remediesTimes,proto3" json:"remedies_times,omitempty" bson:"remedies_times"`
	//@inject_tag: bson:"remedies_multiple"
	RemediesMultiple float64 `protobuf:"fixed64,4,opt,name=remedies_multiple,json=remediesMultiple,proto3" json:"remedies_multiple,omitempty" bson:"remedies_multiple"`
	//@inject_tag: bson:"exchange_gold"
	ExchangeGold float64 `protobuf:"fixed64,5,opt,name=exchange_gold,json=exchangeGold,proto3" json:"exchange_gold,omitempty" bson:"exchange_gold"`
	//@inject_tag: bson:"wheel_gold"
	WheelGold float64 `protobuf:"fixed64,6,opt,name=wheel_gold,json=wheelGold,proto3" json:"wheel_gold,omitempty" bson:"wheel_gold"`
	//@inject_tag: bson:"avoid_loss_pro"
	AvoidLossPro float64 `protobuf:"fixed64,7,opt,name=avoid_loss_pro,json=avoidLossPro,proto3" json:"avoid_loss_pro,omitempty" bson:"avoid_loss_pro"`
	//@inject_tag: bson:"desc"
	Desc []*GetVipPrivilegeConfigRsp_Desc `protobuf:"bytes,8,rep,name=desc,proto3" json:"desc,omitempty" bson:"desc"`
	//@inject_tag: bson:"rewards"
	Rewards []*AwardItem `protobuf:"bytes,9,rep,name=rewards,proto3" json:"rewards,omitempty" bson:"rewards"`
	//@inject_tag: bson:"round_rewards"
	RoundRewards []*AwardItem `protobuf:"bytes,10,rep,name=round_rewards,json=roundRewards,proto3" json:"round_rewards,omitempty" bson:"round_rewards"` //每一局游戏结束自动下发道具
	State        int32        `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`                                  //0未达成，1可领取，2已领取
}

func (x *GetVipPrivilegeConfigRsp_Right) Reset() {
	*x = GetVipPrivilegeConfigRsp_Right{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vip_privilege_proto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipPrivilegeConfigRsp_Right) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipPrivilegeConfigRsp_Right) ProtoMessage() {}

func (x *GetVipPrivilegeConfigRsp_Right) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vip_privilege_proto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipPrivilegeConfigRsp_Right.ProtoReflect.Descriptor instead.
func (*GetVipPrivilegeConfigRsp_Right) Descriptor() ([]byte, []int) {
	return file_proto_vip_privilege_proto_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetVipPrivilegeConfigRsp_Right) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Right) GetExperience() int32 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Right) GetRemediesTimes() int32 {
	if x != nil {
		return x.RemediesTimes
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Right) GetRemediesMultiple() float64 {
	if x != nil {
		return x.RemediesMultiple
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Right) GetExchangeGold() float64 {
	if x != nil {
		return x.ExchangeGold
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Right) GetWheelGold() float64 {
	if x != nil {
		return x.WheelGold
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Right) GetAvoidLossPro() float64 {
	if x != nil {
		return x.AvoidLossPro
	}
	return 0
}

func (x *GetVipPrivilegeConfigRsp_Right) GetDesc() []*GetVipPrivilegeConfigRsp_Desc {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *GetVipPrivilegeConfigRsp_Right) GetRewards() []*AwardItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *GetVipPrivilegeConfigRsp_Right) GetRoundRewards() []*AwardItem {
	if x != nil {
		return x.RoundRewards
	}
	return nil
}

func (x *GetVipPrivilegeConfigRsp_Right) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

var File_proto_vip_privilege_proto_proto protoreflect.FileDescriptor

var file_proto_vip_privilege_proto_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x1a, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x22, 0x92, 0x05, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x73, 0x70, 0x2e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x1a, 0x44, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0xb7,
	0x03, 0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65,
	0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x67,
	0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x65, 0x65, 0x6c,
	0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x77, 0x68, 0x65,
	0x65, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x5f,
	0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x61, 0x76, 0x6f, 0x69, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x60, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x1a, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x65, 0x71, 0x22, 0x80, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x73,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x10, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x67, 0x6f,
	0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x5f,
	0x67, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x77, 0x68, 0x65, 0x65,
	0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x5f, 0x6c,
	0x6f, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61,
	0x76, 0x6f, 0x69, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x32, 0xb7, 0x02, 0x0a, 0x0c,
	0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x61, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x50, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x56,
	0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_vip_privilege_proto_proto_rawDescOnce sync.Once
	file_proto_vip_privilege_proto_proto_rawDescData = file_proto_vip_privilege_proto_proto_rawDesc
)

func file_proto_vip_privilege_proto_proto_rawDescGZIP() []byte {
	file_proto_vip_privilege_proto_proto_rawDescOnce.Do(func() {
		file_proto_vip_privilege_proto_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_vip_privilege_proto_proto_rawDescData)
	})
	return file_proto_vip_privilege_proto_proto_rawDescData
}

var file_proto_vip_privilege_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_vip_privilege_proto_proto_goTypes = []interface{}{
	(*GetVipPrivilegeConfigReq)(nil),       // 0: activity.GetVipPrivilegeConfigReq
	(*GetVipPrivilegeConfigRsp)(nil),       // 1: activity.GetVipPrivilegeConfigRsp
	(*GetVipPrivilegeRewardReq)(nil),       // 2: activity.GetVipPrivilegeRewardReq
	(*GetVipPrivilegeRewardRsp)(nil),       // 3: activity.GetVipPrivilegeRewardRsp
	(*GetPlayerVipPrivilegeReq)(nil),       // 4: activity.GetPlayerVipPrivilegeReq
	(*GetPlayerVipPrivilegeRsp)(nil),       // 5: activity.GetPlayerVipPrivilegeRsp
	(*GetVipPrivilegeConfigRsp_Desc)(nil),  // 6: activity.GetVipPrivilegeConfigRsp.Desc
	(*GetVipPrivilegeConfigRsp_Right)(nil), // 7: activity.GetVipPrivilegeConfigRsp.Right
	(*AwardItem)(nil),                      // 8: activity.AwardItem
}
var file_proto_vip_privilege_proto_proto_depIdxs = []int32{
	7, // 0: activity.GetVipPrivilegeConfigRsp.list:type_name -> activity.GetVipPrivilegeConfigRsp.Right
	8, // 1: activity.GetVipPrivilegeRewardRsp.award_item:type_name -> activity.AwardItem
	6, // 2: activity.GetVipPrivilegeConfigRsp.Right.desc:type_name -> activity.GetVipPrivilegeConfigRsp.Desc
	8, // 3: activity.GetVipPrivilegeConfigRsp.Right.rewards:type_name -> activity.AwardItem
	8, // 4: activity.GetVipPrivilegeConfigRsp.Right.round_rewards:type_name -> activity.AwardItem
	0, // 5: activity.VipPrivilege.GetVipPrivilegeConfig:input_type -> activity.GetVipPrivilegeConfigReq
	2, // 6: activity.VipPrivilege.GetVipPrivilegeReward:input_type -> activity.GetVipPrivilegeRewardReq
	4, // 7: activity.VipPrivilege.GetPlayerVipPrivilege:input_type -> activity.GetPlayerVipPrivilegeReq
	1, // 8: activity.VipPrivilege.GetVipPrivilegeConfig:output_type -> activity.GetVipPrivilegeConfigRsp
	3, // 9: activity.VipPrivilege.GetVipPrivilegeReward:output_type -> activity.GetVipPrivilegeRewardRsp
	5, // 10: activity.VipPrivilege.GetPlayerVipPrivilege:output_type -> activity.GetPlayerVipPrivilegeRsp
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_vip_privilege_proto_proto_init() }
func file_proto_vip_privilege_proto_proto_init() {
	if File_proto_vip_privilege_proto_proto != nil {
		return
	}
	file_proto_activity_proto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_vip_privilege_proto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipPrivilegeConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vip_privilege_proto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipPrivilegeConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vip_privilege_proto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipPrivilegeRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vip_privilege_proto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipPrivilegeRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vip_privilege_proto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerVipPrivilegeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vip_privilege_proto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerVipPrivilegeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vip_privilege_proto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipPrivilegeConfigRsp_Desc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vip_privilege_proto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipPrivilegeConfigRsp_Right); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_vip_privilege_proto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vip_privilege_proto_proto_goTypes,
		DependencyIndexes: file_proto_vip_privilege_proto_proto_depIdxs,
		MessageInfos:      file_proto_vip_privilege_proto_proto_msgTypes,
	}.Build()
	File_proto_vip_privilege_proto_proto = out.File
	file_proto_vip_privilege_proto_proto_rawDesc = nil
	file_proto_vip_privilege_proto_proto_goTypes = nil
	file_proto_vip_privilege_proto_proto_depIdxs = nil
}
