// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.1
// source: proto/lobby.proto

package lobby

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item_Type int32

const (
	Item_Platform Item_Type = 0 // 平台道具
	Item_Game     Item_Type = 1 // 游戏道具
)

// Enum value maps for Item_Type.
var (
	Item_Type_name = map[int32]string{
		0: "Platform",
		1: "Game",
	}
	Item_Type_value = map[string]int32{
		"Platform": 0,
		"Game":     1,
	}
)

func (x Item_Type) Enum() *Item_Type {
	p := new(Item_Type)
	*p = x
	return p
}

func (x Item_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Item_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lobby_proto_enumTypes[0].Descriptor()
}

func (Item_Type) Type() protoreflect.EnumType {
	return &file_proto_lobby_proto_enumTypes[0]
}

func (x Item_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Item_Type.Descriptor instead.
func (Item_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{4, 0}
}

type GetPlyStatusRsp_Type int32

const (
	GetPlyStatusRsp_AsyncGame    GetPlyStatusRsp_Type = 0 // 异步比赛
	GetPlyStatusRsp_RealTimeGame GetPlyStatusRsp_Type = 1 // 实时游戏
)

// Enum value maps for GetPlyStatusRsp_Type.
var (
	GetPlyStatusRsp_Type_name = map[int32]string{
		0: "AsyncGame",
		1: "RealTimeGame",
	}
	GetPlyStatusRsp_Type_value = map[string]int32{
		"AsyncGame":    0,
		"RealTimeGame": 1,
	}
)

func (x GetPlyStatusRsp_Type) Enum() *GetPlyStatusRsp_Type {
	p := new(GetPlyStatusRsp_Type)
	*p = x
	return p
}

func (x GetPlyStatusRsp_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPlyStatusRsp_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lobby_proto_enumTypes[1].Descriptor()
}

func (GetPlyStatusRsp_Type) Type() protoreflect.EnumType {
	return &file_proto_lobby_proto_enumTypes[1]
}

func (x GetPlyStatusRsp_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPlyStatusRsp_Type.Descriptor instead.
func (GetPlyStatusRsp_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{28, 0}
}

type GetAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameGid string `protobuf:"bytes,1,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
	Pn      string `protobuf:"bytes,2,opt,name=pn,proto3" json:"pn,omitempty"`
}

func (x *GetAccessTokenReq) Reset() {
	*x = GetAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessTokenReq) ProtoMessage() {}

func (x *GetAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessTokenReq.ProtoReflect.Descriptor instead.
func (*GetAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccessTokenReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *GetAccessTokenReq) GetPn() string {
	if x != nil {
		return x.Pn
	}
	return ""
}

type GetAccessTokenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err      string  `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Openid   string  `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Token    string  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Level    int32   `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`                       // 游戏等级
	Exp      int32   `protobuf:"varint,5,opt,name=exp,proto3" json:"exp,omitempty"`                           // 游戏经验值
	JoinTime int64   `protobuf:"varint,6,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"` // 第一次加入游戏时间(当前游戏)
	ItemList []*Item `protobuf:"bytes,7,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`  // 道具列表
	MaxExp   int32   `protobuf:"varint,8,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty"`
}

func (x *GetAccessTokenRsp) Reset() {
	*x = GetAccessTokenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessTokenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessTokenRsp) ProtoMessage() {}

func (x *GetAccessTokenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessTokenRsp.ProtoReflect.Descriptor instead.
func (*GetAccessTokenRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{1}
}

func (x *GetAccessTokenRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetAccessTokenRsp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetAccessTokenRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetAccessTokenRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetAccessTokenRsp) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GetAccessTokenRsp) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *GetAccessTokenRsp) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *GetAccessTokenRsp) GetMaxExp() int32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

type GetOnlineNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameList string `protobuf:"bytes,1,opt,name=game_list,json=gameList,proto3" json:"game_list,omitempty"`
}

func (x *GetOnlineNumReq) Reset() {
	*x = GetOnlineNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineNumReq) ProtoMessage() {}

func (x *GetOnlineNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineNumReq.ProtoReflect.Descriptor instead.
func (*GetOnlineNumReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{2}
}

func (x *GetOnlineNumReq) GetGameList() string {
	if x != nil {
		return x.GameList
	}
	return ""
}

type GetOnlineNumRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineNumList map[string]int32 `protobuf:"bytes,1,rep,name=online_num_list,json=onlineNumList,proto3" json:"online_num_list,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetOnlineNumRsp) Reset() {
	*x = GetOnlineNumRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineNumRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineNumRsp) ProtoMessage() {}

func (x *GetOnlineNumRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineNumRsp.ProtoReflect.Descriptor instead.
func (*GetOnlineNumRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{3}
}

func (x *GetOnlineNumRsp) GetOnlineNumList() map[string]int32 {
	if x != nil {
		return x.OnlineNumList
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // 道具ID
	Num      int64     `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                           // 道具数量
	Type     Item_Type `protobuf:"varint,3,opt,name=type,proto3,enum=lobby.Item_Type" json:"type,omitempty"`    // 0平台道具 1游戏道具
	ExpireAt int64     `protobuf:"varint,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"` // 过期时间
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{4}
}

func (x *Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Item) GetType() Item_Type {
	if x != nil {
		return x.Type
	}
	return Item_Platform
}

func (x *Item) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ReqTime    int64  `protobuf:"varint,2,opt,name=req_time,json=reqTime,proto3" json:"req_time,omitempty"`
	AuthMethod string `protobuf:"bytes,4,opt,name=auth_method,json=authMethod,proto3" json:"auth_method,omitempty"`
	AuthInfo   string `protobuf:"bytes,5,opt,name=auth_info,json=authInfo,proto3" json:"auth_info,omitempty"` // auth 相关参数
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{5}
}

func (x *LoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReq) GetReqTime() int64 {
	if x != nil {
		return x.ReqTime
	}
	return 0
}

func (x *LoginReq) GetAuthMethod() string {
	if x != nil {
		return x.AuthMethod
	}
	return ""
}

func (x *LoginReq) GetAuthInfo() string {
	if x != nil {
		return x.AuthInfo
	}
	return ""
}

type LoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                           // 平台账号
	Openid    string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`                         // 游戏账号
	Newbie    bool   `protobuf:"varint,4,opt,name=newbie,proto3" json:"newbie,omitempty"`                        // 是否为新玩家
	AreaInfo  string `protobuf:"bytes,5,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`     // 所在区域
	PlatLevel int32  `protobuf:"varint,6,opt,name=plat_level,json=platLevel,proto3" json:"plat_level,omitempty"` // 平台level
	PlatExp   int32  `protobuf:"varint,7,opt,name=plat_exp,json=platExp,proto3" json:"plat_exp,omitempty"`       // 平台 exp
	//  int64 diamond = 8; // 现金
	//  int64 ticket_z = 9; // ticket z
	Level int32 `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty"` // 游戏等级
	Exp   int32 `protobuf:"varint,11,opt,name=exp,proto3" json:"exp,omitempty"`     // 游戏经验值
	//  int64 score = 12; // 游戏积分
	RegTime        int64             `protobuf:"varint,13,opt,name=reg_time,json=regTime,proto3" json:"reg_time,omitempty"`    // 注册时间
	JoinTime       int64             `protobuf:"varint,14,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"` // 第一次加入游戏时间(当前游戏)
	ItemList       []*Item           `protobuf:"bytes,15,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`  // 道具列表
	Nickname       string            `protobuf:"bytes,16,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex            int32             `protobuf:"varint,17,opt,name=sex,proto3" json:"sex,omitempty"`
	Headimage      string            `protobuf:"bytes,18,opt,name=headimage,proto3" json:"headimage,omitempty"`
	Metadata       map[string]string `protobuf:"bytes,19,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxExp         int32             `protobuf:"varint,20,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty"`
	MaxPlatExp     int32             `protobuf:"varint,21,opt,name=max_plat_exp,json=maxPlatExp,proto3" json:"max_plat_exp,omitempty"`
	GameCount      int32             `protobuf:"varint,22,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"`
	ServerTime     int64             `protobuf:"varint,23,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`               // 服务器时间
	PlatGameCount  int32             `protobuf:"varint,24,opt,name=plat_game_count,json=platGameCount,proto3" json:"plat_game_count,omitempty"`    // 全平台游戏局数
	GameRoundCount int32             `protobuf:"varint,25,opt,name=game_round_count,json=gameRoundCount,proto3" json:"game_round_count,omitempty"` // 游戏比赛回合次数，(比赛里每进行一局，记一次)
	Uid            uint64            `protobuf:"varint,26,opt,name=uid,proto3" json:"uid,omitempty"`                                               // 玩家数字ID
}

func (x *LoginRsp) Reset() {
	*x = LoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRsp) ProtoMessage() {}

func (x *LoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRsp.ProtoReflect.Descriptor instead.
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{6}
}

func (x *LoginRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *LoginRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginRsp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *LoginRsp) GetNewbie() bool {
	if x != nil {
		return x.Newbie
	}
	return false
}

func (x *LoginRsp) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *LoginRsp) GetPlatLevel() int32 {
	if x != nil {
		return x.PlatLevel
	}
	return 0
}

func (x *LoginRsp) GetPlatExp() int32 {
	if x != nil {
		return x.PlatExp
	}
	return 0
}

func (x *LoginRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LoginRsp) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *LoginRsp) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *LoginRsp) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *LoginRsp) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *LoginRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *LoginRsp) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *LoginRsp) GetHeadimage() string {
	if x != nil {
		return x.Headimage
	}
	return ""
}

func (x *LoginRsp) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LoginRsp) GetMaxExp() int32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

func (x *LoginRsp) GetMaxPlatExp() int32 {
	if x != nil {
		return x.MaxPlatExp
	}
	return 0
}

func (x *LoginRsp) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *LoginRsp) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *LoginRsp) GetPlatGameCount() int32 {
	if x != nil {
		return x.PlatGameCount
	}
	return 0
}

func (x *LoginRsp) GetGameRoundCount() int32 {
	if x != nil {
		return x.GameRoundCount
	}
	return 0
}

func (x *LoginRsp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigReq) Reset() {
	*x = GetConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReq) ProtoMessage() {}

func (x *GetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReq.ProtoReflect.Descriptor instead.
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{7}
}

type GetConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    string            `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Config map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetConfigRsp) Reset() {
	*x = GetConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRsp) ProtoMessage() {}

func (x *GetConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRsp.ProtoReflect.Descriptor instead.
func (*GetConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{8}
}

func (x *GetConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetConfigRsp) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetLobbyConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameGid string `protobuf:"bytes,1,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
	PlatAid int32  `protobuf:"varint,2,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
}

func (x *GetLobbyConfigReq) Reset() {
	*x = GetLobbyConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLobbyConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLobbyConfigReq) ProtoMessage() {}

func (x *GetLobbyConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLobbyConfigReq.ProtoReflect.Descriptor instead.
func (*GetLobbyConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{9}
}

func (x *GetLobbyConfigReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *GetLobbyConfigReq) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

type GetLobbyConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    string            `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Config map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetLobbyConfigRsp) Reset() {
	*x = GetLobbyConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLobbyConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLobbyConfigRsp) ProtoMessage() {}

func (x *GetLobbyConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLobbyConfigRsp.ProtoReflect.Descriptor instead.
func (*GetLobbyConfigRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{10}
}

func (x *GetLobbyConfigRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetLobbyConfigRsp) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetPlyDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid  string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	GameGid string `protobuf:"bytes,2,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
}

func (x *GetPlyDetailReq) Reset() {
	*x = GetPlyDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyDetailReq) ProtoMessage() {}

func (x *GetPlyDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyDetailReq.ProtoReflect.Descriptor instead.
func (*GetPlyDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlyDetailReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetPlyDetailReq) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

type GetPlyDetailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid         string  `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname       string  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Headimage      string  `protobuf:"bytes,3,opt,name=headimage,proto3" json:"headimage,omitempty"`
	AreaInfo       string  `protobuf:"bytes,4,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`
	Level          int32   `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	PlatLevel      int32   `protobuf:"varint,6,opt,name=plat_level,json=platLevel,proto3" json:"plat_level,omitempty"` // 平台level
	Exp            int32   `protobuf:"varint,7,opt,name=exp,proto3" json:"exp,omitempty"`
	PlatExp        int32   `protobuf:"varint,8,opt,name=plat_exp,json=platExp,proto3" json:"plat_exp,omitempty"`
	Err            string  `protobuf:"bytes,9,opt,name=err,proto3" json:"err,omitempty"`
	Props          []*Item `protobuf:"bytes,10,rep,name=props,proto3" json:"props,omitempty"`
	GameCount      int32   `protobuf:"varint,11,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"`
	PlatGameCount  int32   `protobuf:"varint,12,opt,name=plat_game_count,json=platGameCount,proto3" json:"plat_game_count,omitempty"`    // 全平台游戏局数
	GameRoundCount int32   `protobuf:"varint,13,opt,name=game_round_count,json=gameRoundCount,proto3" json:"game_round_count,omitempty"` // 游戏比赛回合次数，(比赛里每进行一局，记一次)
	WinRoundCount  int32   `protobuf:"varint,14,opt,name=win_round_count,json=winRoundCount,proto3" json:"win_round_count,omitempty"`    // 当前游戏胜利局数
}

func (x *GetPlyDetailRsp) Reset() {
	*x = GetPlyDetailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyDetailRsp) ProtoMessage() {}

func (x *GetPlyDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyDetailRsp.ProtoReflect.Descriptor instead.
func (*GetPlyDetailRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{12}
}

func (x *GetPlyDetailRsp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetPlyDetailRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetPlyDetailRsp) GetHeadimage() string {
	if x != nil {
		return x.Headimage
	}
	return ""
}

func (x *GetPlyDetailRsp) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *GetPlyDetailRsp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetPlyDetailRsp) GetPlatLevel() int32 {
	if x != nil {
		return x.PlatLevel
	}
	return 0
}

func (x *GetPlyDetailRsp) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GetPlyDetailRsp) GetPlatExp() int32 {
	if x != nil {
		return x.PlatExp
	}
	return 0
}

func (x *GetPlyDetailRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetPlyDetailRsp) GetProps() []*Item {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *GetPlyDetailRsp) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *GetPlyDetailRsp) GetPlatGameCount() int32 {
	if x != nil {
		return x.PlatGameCount
	}
	return 0
}

func (x *GetPlyDetailRsp) GetGameRoundCount() int32 {
	if x != nil {
		return x.GameRoundCount
	}
	return 0
}

func (x *GetPlyDetailRsp) GetWinRoundCount() int32 {
	if x != nil {
		return x.WinRoundCount
	}
	return 0
}

type GetItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetItemReq) Reset() {
	*x = GetItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemReq) ProtoMessage() {}

func (x *GetItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemReq.ProtoReflect.Descriptor instead.
func (*GetItemReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{13}
}

type GetItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList []*Item `protobuf:"bytes,1,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"` // 道具列表
	Err      string  `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetItemRsp) Reset() {
	*x = GetItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRsp) ProtoMessage() {}

func (x *GetItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRsp.ProtoReflect.Descriptor instead.
func (*GetItemRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{14}
}

func (x *GetItemRsp) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *GetItemRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetPlyGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *GetPlyGameListReq) Reset() {
	*x = GetPlyGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyGameListReq) ProtoMessage() {}

func (x *GetPlyGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyGameListReq.ProtoReflect.Descriptor instead.
func (*GetPlyGameListReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{15}
}

func (x *GetPlyGameListReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type GetPlyGameListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*GetPlyGameListRsp_GameData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	PlatLevel  int32                         `protobuf:"varint,2,opt,name=plat_level,json=platLevel,proto3" json:"plat_level,omitempty"`
	PlatExp    int32                         `protobuf:"varint,3,opt,name=plat_exp,json=platExp,proto3" json:"plat_exp,omitempty"`
	MaxPlatExp int32                         `protobuf:"varint,4,opt,name=max_plat_exp,json=maxPlatExp,proto3" json:"max_plat_exp,omitempty"`
	Err        string                        `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetPlyGameListRsp) Reset() {
	*x = GetPlyGameListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyGameListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyGameListRsp) ProtoMessage() {}

func (x *GetPlyGameListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyGameListRsp.ProtoReflect.Descriptor instead.
func (*GetPlyGameListRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{16}
}

func (x *GetPlyGameListRsp) GetList() []*GetPlyGameListRsp_GameData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetPlyGameListRsp) GetPlatLevel() int32 {
	if x != nil {
		return x.PlatLevel
	}
	return 0
}

func (x *GetPlyGameListRsp) GetPlatExp() int32 {
	if x != nil {
		return x.PlatExp
	}
	return 0
}

func (x *GetPlyGameListRsp) GetMaxPlatExp() int32 {
	if x != nil {
		return x.MaxPlatExp
	}
	return 0
}

func (x *GetPlyGameListRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type Coin2TicketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Coin2TicketReq) Reset() {
	*x = Coin2TicketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin2TicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin2TicketReq) ProtoMessage() {}

func (x *Coin2TicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin2TicketReq.ProtoReflect.Descriptor instead.
func (*Coin2TicketReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{17}
}

type Coin2TicketRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Coin    int64  `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`       // 游戏币转换ticket份额
	Ticket  int64  `protobuf:"varint,3,opt,name=ticket,proto3" json:"ticket,omitempty"`   // 最新ticket数量
	Convert int64  `protobuf:"varint,4,opt,name=convert,proto3" json:"convert,omitempty"` // 游戏币转换ticket数量
}

func (x *Coin2TicketRsp) Reset() {
	*x = Coin2TicketRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin2TicketRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin2TicketRsp) ProtoMessage() {}

func (x *Coin2TicketRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin2TicketRsp.ProtoReflect.Descriptor instead.
func (*Coin2TicketRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{18}
}

func (x *Coin2TicketRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *Coin2TicketRsp) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *Coin2TicketRsp) GetTicket() int64 {
	if x != nil {
		return x.Ticket
	}
	return 0
}

func (x *Coin2TicketRsp) GetConvert() int64 {
	if x != nil {
		return x.Convert
	}
	return 0
}

type RefreshTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthMethod string `protobuf:"bytes,1,opt,name=auth_method,json=authMethod,proto3" json:"auth_method,omitempty"`
	AuthInfo   string `protobuf:"bytes,2,opt,name=auth_info,json=authInfo,proto3" json:"auth_info,omitempty"` // auth 相关参数
}

func (x *RefreshTokenReq) Reset() {
	*x = RefreshTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenReq) ProtoMessage() {}

func (x *RefreshTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenReq.ProtoReflect.Descriptor instead.
func (*RefreshTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{19}
}

func (x *RefreshTokenReq) GetAuthMethod() string {
	if x != nil {
		return x.AuthMethod
	}
	return ""
}

func (x *RefreshTokenReq) GetAuthInfo() string {
	if x != nil {
		return x.AuthInfo
	}
	return ""
}

type RefreshTokenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RefreshTokenRsp) Reset() {
	*x = RefreshTokenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRsp) ProtoMessage() {}

func (x *RefreshTokenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRsp.ProtoReflect.Descriptor instead.
func (*RefreshTokenRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{20}
}

func (x *RefreshTokenRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RefreshTokenRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type EmailVerificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T string `protobuf:"bytes,1,opt,name=t,proto3" json:"t,omitempty"` // token
}

func (x *EmailVerificationReq) Reset() {
	*x = EmailVerificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailVerificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailVerificationReq) ProtoMessage() {}

func (x *EmailVerificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailVerificationReq.ProtoReflect.Descriptor instead.
func (*EmailVerificationReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{21}
}

func (x *EmailVerificationReq) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

type EmailVerificationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EmailVerificationRsp) Reset() {
	*x = EmailVerificationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailVerificationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailVerificationRsp) ProtoMessage() {}

func (x *EmailVerificationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailVerificationRsp.ProtoReflect.Descriptor instead.
func (*EmailVerificationRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{22}
}

func (x *EmailVerificationRsp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EmailVerificationRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{23}
}

func (x *ResetPasswordReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ResetPasswordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResetPasswordRsp) Reset() {
	*x = ResetPasswordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRsp) ProtoMessage() {}

func (x *ResetPasswordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRsp.ProtoReflect.Descriptor instead.
func (*ResetPasswordRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{24}
}

func (x *ResetPasswordRsp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ResetPasswordRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason   string            `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	ItemList []*Item           `protobuf:"bytes,2,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Tags     map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateItemReq) Reset() {
	*x = UpdateItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemReq) ProtoMessage() {}

func (x *UpdateItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemReq.ProtoReflect.Descriptor instead.
func (*UpdateItemReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateItemReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateItemReq) GetItemList() []*Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *UpdateItemReq) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *UpdateItemRsp) Reset() {
	*x = UpdateItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemRsp) ProtoMessage() {}

func (x *UpdateItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemRsp.ProtoReflect.Descriptor instead.
func (*UpdateItemRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateItemRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetPlyStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlyStatusReq) Reset() {
	*x = GetPlyStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyStatusReq) ProtoMessage() {}

func (x *GetPlyStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyStatusReq.ProtoReflect.Descriptor instead.
func (*GetPlyStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{27}
}

type GetPlyStatusRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err      string               `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	GameType GetPlyStatusRsp_Type `protobuf:"varint,2,opt,name=game_type,json=gameType,proto3,enum=lobby.GetPlyStatusRsp_Type" json:"game_type,omitempty"`
	MatchId  string               `protobuf:"bytes,3,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	RoomId   string               `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ServerId string               `protobuf:"bytes,5,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	GameGid  string               `protobuf:"bytes,6,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
	MatchCid string               `protobuf:"bytes,7,opt,name=match_cid,json=matchCid,proto3" json:"match_cid,omitempty"`
	Metadata map[string]string    `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetPlyStatusRsp) Reset() {
	*x = GetPlyStatusRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyStatusRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyStatusRsp) ProtoMessage() {}

func (x *GetPlyStatusRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyStatusRsp.ProtoReflect.Descriptor instead.
func (*GetPlyStatusRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{28}
}

func (x *GetPlyStatusRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetPlyStatusRsp) GetGameType() GetPlyStatusRsp_Type {
	if x != nil {
		return x.GameType
	}
	return GetPlyStatusRsp_AsyncGame
}

func (x *GetPlyStatusRsp) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *GetPlyStatusRsp) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetPlyStatusRsp) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *GetPlyStatusRsp) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *GetPlyStatusRsp) GetMatchCid() string {
	if x != nil {
		return x.MatchCid
	}
	return ""
}

func (x *GetPlyStatusRsp) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetOnlineStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
}

func (x *GetOnlineStatusReq) Reset() {
	*x = GetOnlineStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineStatusReq) ProtoMessage() {}

func (x *GetOnlineStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineStatusReq.ProtoReflect.Descriptor instead.
func (*GetOnlineStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{29}
}

func (x *GetOnlineStatusReq) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

type GetOnlineStatusRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        string                       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	StatusList []*GetOnlineStatusRsp_Status `protobuf:"bytes,2,rep,name=status_list,json=statusList,proto3" json:"status_list,omitempty"`
}

func (x *GetOnlineStatusRsp) Reset() {
	*x = GetOnlineStatusRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineStatusRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineStatusRsp) ProtoMessage() {}

func (x *GetOnlineStatusRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineStatusRsp.ProtoReflect.Descriptor instead.
func (*GetOnlineStatusRsp) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{30}
}

func (x *GetOnlineStatusRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetOnlineStatusRsp) GetStatusList() []*GetOnlineStatusRsp_Status {
	if x != nil {
		return x.StatusList
	}
	return nil
}

type GetPlyGameListRsp_GameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Level  int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Exp    int32  `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`
	MaxExp int32  `protobuf:"varint,4,opt,name=max_exp,json=maxExp,proto3" json:"max_exp,omitempty"`
}

func (x *GetPlyGameListRsp_GameData) Reset() {
	*x = GetPlyGameListRsp_GameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlyGameListRsp_GameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlyGameListRsp_GameData) ProtoMessage() {}

func (x *GetPlyGameListRsp_GameData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlyGameListRsp_GameData.ProtoReflect.Descriptor instead.
func (*GetPlyGameListRsp_GameData) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetPlyGameListRsp_GameData) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetPlyGameListRsp_GameData) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetPlyGameListRsp_GameData) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *GetPlyGameListRsp_GameData) GetMaxExp() int32 {
	if x != nil {
		return x.MaxExp
	}
	return 0
}

type GetOnlineStatusRsp_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid   string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`     // 玩家ID
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像
	Online   bool   `protobuf:"varint,4,opt,name=online,proto3" json:"online,omitempty"`    // 是否在线,0离线1在线
}

func (x *GetOnlineStatusRsp_Status) Reset() {
	*x = GetOnlineStatusRsp_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lobby_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineStatusRsp_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineStatusRsp_Status) ProtoMessage() {}

func (x *GetOnlineStatusRsp_Status) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lobby_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineStatusRsp_Status.ProtoReflect.Descriptor instead.
func (*GetOnlineStatusRsp_Status) Descriptor() ([]byte, []int) {
	return file_proto_lobby_proto_rawDescGZIP(), []int{30, 0}
}

func (x *GetOnlineStatusRsp_Status) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetOnlineStatusRsp_Status) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetOnlineStatusRsp_Status) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetOnlineStatusRsp_Status) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

var File_proto_lobby_proto protoreflect.FileDescriptor

var file_proto_lobby_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x22, 0x3e, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6e, 0x22, 0xdb, 0x01, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x22, 0x2e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0f,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x40, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x8b, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x22,
	0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x22,
	0x79, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe6, 0x05, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x62, 0x69,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x62, 0x69, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x6f, 0x62, 0x62,
	0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x65,
	0x78, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x70,
	0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x74, 0x45,
	0x78, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x6c, 0x61,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a,
	0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c,
	0x61, 0x74, 0x41, 0x69, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x3c, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x22, 0xb0, 0x03, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x45, 0x78,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x70, 0x6c, 0x61, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x69, 0x6e, 0x5f, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x77, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x22, 0x48, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x22, 0x9e, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x74, 0x45, 0x78, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x1a,
	0x64, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x45, 0x78, 0x70, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x32, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22, 0x68, 0x0a, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x32,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x22, 0x4f, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x39, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x24, 0x0a,
	0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x74, 0x22, 0x3c, 0x0a, 0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x44, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x21, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x22, 0x8e, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x38,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x47, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x69,
	0x64, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73,
	0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x6c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x32, 0x8e, 0x07, 0x0a, 0x05, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x2b, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0f, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x2e, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x13,
	0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x32,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x32, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x32, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0b, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x6c, 0x6f, 0x62, 0x62,
	0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x32, 0x52, 0x0a, 0x08, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x70, 0x63, 0x12,
	0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_lobby_proto_rawDescOnce sync.Once
	file_proto_lobby_proto_rawDescData = file_proto_lobby_proto_rawDesc
)

func file_proto_lobby_proto_rawDescGZIP() []byte {
	file_proto_lobby_proto_rawDescOnce.Do(func() {
		file_proto_lobby_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_lobby_proto_rawDescData)
	})
	return file_proto_lobby_proto_rawDescData
}

var file_proto_lobby_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_lobby_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_proto_lobby_proto_goTypes = []interface{}{
	(Item_Type)(0),                     // 0: lobby.Item.Type
	(GetPlyStatusRsp_Type)(0),          // 1: lobby.GetPlyStatusRsp.Type
	(*GetAccessTokenReq)(nil),          // 2: lobby.GetAccessTokenReq
	(*GetAccessTokenRsp)(nil),          // 3: lobby.GetAccessTokenRsp
	(*GetOnlineNumReq)(nil),            // 4: lobby.GetOnlineNumReq
	(*GetOnlineNumRsp)(nil),            // 5: lobby.GetOnlineNumRsp
	(*Item)(nil),                       // 6: lobby.Item
	(*LoginReq)(nil),                   // 7: lobby.LoginReq
	(*LoginRsp)(nil),                   // 8: lobby.LoginRsp
	(*GetConfigReq)(nil),               // 9: lobby.GetConfigReq
	(*GetConfigRsp)(nil),               // 10: lobby.GetConfigRsp
	(*GetLobbyConfigReq)(nil),          // 11: lobby.GetLobbyConfigReq
	(*GetLobbyConfigRsp)(nil),          // 12: lobby.GetLobbyConfigRsp
	(*GetPlyDetailReq)(nil),            // 13: lobby.GetPlyDetailReq
	(*GetPlyDetailRsp)(nil),            // 14: lobby.GetPlyDetailRsp
	(*GetItemReq)(nil),                 // 15: lobby.GetItemReq
	(*GetItemRsp)(nil),                 // 16: lobby.GetItemRsp
	(*GetPlyGameListReq)(nil),          // 17: lobby.GetPlyGameListReq
	(*GetPlyGameListRsp)(nil),          // 18: lobby.GetPlyGameListRsp
	(*Coin2TicketReq)(nil),             // 19: lobby.Coin2TicketReq
	(*Coin2TicketRsp)(nil),             // 20: lobby.Coin2TicketRsp
	(*RefreshTokenReq)(nil),            // 21: lobby.RefreshTokenReq
	(*RefreshTokenRsp)(nil),            // 22: lobby.RefreshTokenRsp
	(*EmailVerificationReq)(nil),       // 23: lobby.EmailVerificationReq
	(*EmailVerificationRsp)(nil),       // 24: lobby.EmailVerificationRsp
	(*ResetPasswordReq)(nil),           // 25: lobby.ResetPasswordReq
	(*ResetPasswordRsp)(nil),           // 26: lobby.ResetPasswordRsp
	(*UpdateItemReq)(nil),              // 27: lobby.UpdateItemReq
	(*UpdateItemRsp)(nil),              // 28: lobby.UpdateItemRsp
	(*GetPlyStatusReq)(nil),            // 29: lobby.GetPlyStatusReq
	(*GetPlyStatusRsp)(nil),            // 30: lobby.GetPlyStatusRsp
	(*GetOnlineStatusReq)(nil),         // 31: lobby.GetOnlineStatusReq
	(*GetOnlineStatusRsp)(nil),         // 32: lobby.GetOnlineStatusRsp
	nil,                                // 33: lobby.GetOnlineNumRsp.OnlineNumListEntry
	nil,                                // 34: lobby.LoginRsp.MetadataEntry
	nil,                                // 35: lobby.GetConfigRsp.ConfigEntry
	nil,                                // 36: lobby.GetLobbyConfigRsp.ConfigEntry
	(*GetPlyGameListRsp_GameData)(nil), // 37: lobby.GetPlyGameListRsp.GameData
	nil,                                // 38: lobby.UpdateItemReq.TagsEntry
	nil,                                // 39: lobby.GetPlyStatusRsp.MetadataEntry
	(*GetOnlineStatusRsp_Status)(nil),  // 40: lobby.GetOnlineStatusRsp.Status
}
var file_proto_lobby_proto_depIdxs = []int32{
	6,  // 0: lobby.GetAccessTokenRsp.item_list:type_name -> lobby.Item
	33, // 1: lobby.GetOnlineNumRsp.online_num_list:type_name -> lobby.GetOnlineNumRsp.OnlineNumListEntry
	0,  // 2: lobby.Item.type:type_name -> lobby.Item.Type
	6,  // 3: lobby.LoginRsp.item_list:type_name -> lobby.Item
	34, // 4: lobby.LoginRsp.metadata:type_name -> lobby.LoginRsp.MetadataEntry
	35, // 5: lobby.GetConfigRsp.config:type_name -> lobby.GetConfigRsp.ConfigEntry
	36, // 6: lobby.GetLobbyConfigRsp.config:type_name -> lobby.GetLobbyConfigRsp.ConfigEntry
	6,  // 7: lobby.GetPlyDetailRsp.props:type_name -> lobby.Item
	6,  // 8: lobby.GetItemRsp.item_list:type_name -> lobby.Item
	37, // 9: lobby.GetPlyGameListRsp.list:type_name -> lobby.GetPlyGameListRsp.GameData
	6,  // 10: lobby.UpdateItemReq.item_list:type_name -> lobby.Item
	38, // 11: lobby.UpdateItemReq.tags:type_name -> lobby.UpdateItemReq.TagsEntry
	1,  // 12: lobby.GetPlyStatusRsp.game_type:type_name -> lobby.GetPlyStatusRsp.Type
	39, // 13: lobby.GetPlyStatusRsp.metadata:type_name -> lobby.GetPlyStatusRsp.MetadataEntry
	40, // 14: lobby.GetOnlineStatusRsp.status_list:type_name -> lobby.GetOnlineStatusRsp.Status
	7,  // 15: lobby.Lobby.Login:input_type -> lobby.LoginReq
	2,  // 16: lobby.Lobby.GetAccessToken:input_type -> lobby.GetAccessTokenReq
	9,  // 17: lobby.Lobby.GetConfig:input_type -> lobby.GetConfigReq
	13, // 18: lobby.Lobby.GetPlyDetail:input_type -> lobby.GetPlyDetailReq
	15, // 19: lobby.Lobby.GetItem:input_type -> lobby.GetItemReq
	17, // 20: lobby.Lobby.GetPlyGameList:input_type -> lobby.GetPlyGameListReq
	19, // 21: lobby.Lobby.Coin2Ticket:input_type -> lobby.Coin2TicketReq
	21, // 22: lobby.Lobby.RefreshToken:input_type -> lobby.RefreshTokenReq
	4,  // 23: lobby.Lobby.GetOnlineNum:input_type -> lobby.GetOnlineNumReq
	23, // 24: lobby.Lobby.VerifyEmail:input_type -> lobby.EmailVerificationReq
	25, // 25: lobby.Lobby.ResetPassword:input_type -> lobby.ResetPasswordReq
	27, // 26: lobby.Lobby.UpdateItem:input_type -> lobby.UpdateItemReq
	29, // 27: lobby.Lobby.GetPlyStatus:input_type -> lobby.GetPlyStatusReq
	31, // 28: lobby.Lobby.GetOnlineStatus:input_type -> lobby.GetOnlineStatusReq
	11, // 29: lobby.LobbyRpc.GetLobbyConfig:input_type -> lobby.GetLobbyConfigReq
	8,  // 30: lobby.Lobby.Login:output_type -> lobby.LoginRsp
	3,  // 31: lobby.Lobby.GetAccessToken:output_type -> lobby.GetAccessTokenRsp
	10, // 32: lobby.Lobby.GetConfig:output_type -> lobby.GetConfigRsp
	14, // 33: lobby.Lobby.GetPlyDetail:output_type -> lobby.GetPlyDetailRsp
	16, // 34: lobby.Lobby.GetItem:output_type -> lobby.GetItemRsp
	18, // 35: lobby.Lobby.GetPlyGameList:output_type -> lobby.GetPlyGameListRsp
	20, // 36: lobby.Lobby.Coin2Ticket:output_type -> lobby.Coin2TicketRsp
	22, // 37: lobby.Lobby.RefreshToken:output_type -> lobby.RefreshTokenRsp
	5,  // 38: lobby.Lobby.GetOnlineNum:output_type -> lobby.GetOnlineNumRsp
	24, // 39: lobby.Lobby.VerifyEmail:output_type -> lobby.EmailVerificationRsp
	26, // 40: lobby.Lobby.ResetPassword:output_type -> lobby.ResetPasswordRsp
	28, // 41: lobby.Lobby.UpdateItem:output_type -> lobby.UpdateItemRsp
	30, // 42: lobby.Lobby.GetPlyStatus:output_type -> lobby.GetPlyStatusRsp
	32, // 43: lobby.Lobby.GetOnlineStatus:output_type -> lobby.GetOnlineStatusRsp
	12, // 44: lobby.LobbyRpc.GetLobbyConfig:output_type -> lobby.GetLobbyConfigRsp
	30, // [30:45] is the sub-list for method output_type
	15, // [15:30] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_lobby_proto_init() }
func file_proto_lobby_proto_init() {
	if File_proto_lobby_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_lobby_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessTokenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineNumRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLobbyConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLobbyConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyDetailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyGameListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin2TicketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin2TicketRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailVerificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailVerificationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyStatusRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineStatusRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlyGameListRsp_GameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lobby_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineStatusRsp_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_lobby_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_lobby_proto_goTypes,
		DependencyIndexes: file_proto_lobby_proto_depIdxs,
		EnumInfos:         file_proto_lobby_proto_enumTypes,
		MessageInfos:      file_proto_lobby_proto_msgTypes,
	}.Build()
	File_proto_lobby_proto = out.File
	file_proto_lobby_proto_rawDesc = nil
	file_proto_lobby_proto_goTypes = nil
	file_proto_lobby_proto_depIdxs = nil
}
