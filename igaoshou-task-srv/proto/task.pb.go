// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.1
// source: proto/task.proto

package task

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AwardType int32

const (
	AwardType_Default AwardType = 0 // 普通
	AwardType_Ad      AwardType = 1 // 看广告
)

// Enum value maps for AwardType.
var (
	AwardType_name = map[int32]string{
		0: "Default",
		1: "Ad",
	}
	AwardType_value = map[string]int32{
		"Default": 0,
		"Ad":      1,
	}
)

func (x AwardType) Enum() *AwardType {
	p := new(AwardType)
	*p = x
	return p
}

func (x AwardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwardType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_task_proto_enumTypes[0].Descriptor()
}

func (AwardType) Type() protoreflect.EnumType {
	return &file_proto_task_proto_enumTypes[0]
}

func (x AwardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwardType.Descriptor instead.
func (AwardType) EnumDescriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{0}
}

type GetAwardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string    `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Type   AwardType `protobuf:"varint,2,opt,name=type,proto3,enum=task.AwardType" json:"type,omitempty"`
	Params string    `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetAwardReq) Reset() {
	*x = GetAwardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAwardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAwardReq) ProtoMessage() {}

func (x *GetAwardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAwardReq.ProtoReflect.Descriptor instead.
func (*GetAwardReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{0}
}

func (x *GetAwardReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetAwardReq) GetType() AwardType {
	if x != nil {
		return x.Type
	}
	return AwardType_Default
}

func (x *GetAwardReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type GetAwardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       string    `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	AwardList []*Item   `protobuf:"bytes,2,rep,name=award_list,json=awardList,proto3" json:"award_list,omitempty"` // 任务奖励
	Type      AwardType `protobuf:"varint,3,opt,name=type,proto3,enum=task.AwardType" json:"type,omitempty"`
}

func (x *GetAwardRsp) Reset() {
	*x = GetAwardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAwardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAwardRsp) ProtoMessage() {}

func (x *GetAwardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAwardRsp.ProtoReflect.Descriptor instead.
func (*GetAwardRsp) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{1}
}

func (x *GetAwardRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetAwardRsp) GetAwardList() []*Item {
	if x != nil {
		return x.AwardList
	}
	return nil
}

func (x *GetAwardRsp) GetType() AwardType {
	if x != nil {
		return x.Type
	}
	return AwardType_Default
}

type GetTaskDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskDataReq) Reset() {
	*x = GetTaskDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskDataReq) ProtoMessage() {}

func (x *GetTaskDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskDataReq.ProtoReflect.Descriptor instead.
func (*GetTaskDataReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{2}
}

func (x *GetTaskDataReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err      string    `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	TaskData *TaskData `protobuf:"bytes,2,opt,name=task_data,json=taskData,proto3" json:"task_data,omitempty"`
}

func (x *GetTaskDataRsp) Reset() {
	*x = GetTaskDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskDataRsp) ProtoMessage() {}

func (x *GetTaskDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskDataRsp.ProtoReflect.Descriptor instead.
func (*GetTaskDataRsp) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskDataRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetTaskDataRsp) GetTaskData() *TaskData {
	if x != nil {
		return x.TaskData
	}
	return nil
}

type GetTaskListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  int64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Platform bool  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *GetTaskListReq) Reset() {
	*x = GetTaskListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskListReq) ProtoMessage() {}

func (x *GetTaskListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskListReq.ProtoReflect.Descriptor instead.
func (*GetTaskListReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskListReq) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetTaskListReq) GetPlatform() bool {
	if x != nil {
		return x.Platform
	}
	return false
}

type GetTaskListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  string      `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	List []*TaskData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetTaskListRsp) Reset() {
	*x = GetTaskListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskListRsp) ProtoMessage() {}

func (x *GetTaskListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskListRsp.ProtoReflect.Descriptor instead.
func (*GetTaskListRsp) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskListRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetTaskListRsp) GetList() []*TaskData {
	if x != nil {
		return x.List
	}
	return nil
}

type Prob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min    int32 `protobuf:"varint,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max    int32 `protobuf:"varint,2,opt,name=Max,proto3" json:"Max,omitempty"`
	Weight int32 `protobuf:"varint,3,opt,name=Weight,proto3" json:"Weight,omitempty"`
}

func (x *Prob) Reset() {
	*x = Prob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prob) ProtoMessage() {}

func (x *Prob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prob.ProtoReflect.Descriptor instead.
func (*Prob) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{6}
}

func (x *Prob) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Prob) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Prob) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type ItemBox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Prob []*Prob `protobuf:"bytes,2,rep,name=prob,proto3" json:"prob,omitempty"`
}

func (x *ItemBox) Reset() {
	*x = ItemBox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBox) ProtoMessage() {}

func (x *ItemBox) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBox.ProtoReflect.Descriptor instead.
func (*ItemBox) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{7}
}

func (x *ItemBox) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemBox) GetProb() []*Prob {
	if x != nil {
		return x.Prob
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{8}
}

func (x *Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type TaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      string     `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Type        int32      `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                                  // 任务类型
	Progress    int64      `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`                          // 当前进度值
	Status      int32      `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                              // 任务状态 0未完成 1奖励未领取 2已完成
	Desc        string     `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`                                   // 任务描述
	MaxProgress int64      `protobuf:"varint,6,opt,name=max_progress,json=maxProgress,proto3" json:"max_progress,omitempty"` // 最大进度值
	AwardList   []*Item    `protobuf:"bytes,7,rep,name=award_list,json=awardList,proto3" json:"award_list,omitempty"`        // 任务奖励
	TaskTid     string     `protobuf:"bytes,8,opt,name=task_tid,json=taskTid,proto3" json:"task_tid,omitempty"`
	GroupId     int32      `protobuf:"varint,9,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Icon        string     `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`
	ClientParam string     `protobuf:"bytes,11,opt,name=client_param,json=clientParam,proto3" json:"client_param,omitempty"` // 客户端参数
	Hide        bool       `protobuf:"varint,12,opt,name=hide,proto3" json:"hide,omitempty"`                                 // 是否隐藏
	BoxList     []*ItemBox `protobuf:"bytes,13,rep,name=box_list,json=boxList,proto3" json:"box_list,omitempty"`             // 宝箱列表
	Name        string     `protobuf:"bytes,14,opt,name=name,proto3" json:"name,omitempty"`
	ExtParam    string     `protobuf:"bytes,15,opt,name=ext_param,json=extParam,proto3" json:"ext_param,omitempty"` // 扩展参数
	CondParam   string     `protobuf:"bytes,16,opt,name=cond_param,json=condParam,proto3" json:"cond_param,omitempty"`
	CondType    int32      `protobuf:"varint,17,opt,name=cond_type,json=condType,proto3" json:"cond_type,omitempty"`
	Order       int32      `protobuf:"varint,18,opt,name=order,proto3" json:"order,omitempty"`
	ExpireAt    int64      `protobuf:"varint,19,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	GameGid     string     `protobuf:"bytes,20,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
}

func (x *TaskData) Reset() {
	*x = TaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskData) ProtoMessage() {}

func (x *TaskData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskData.ProtoReflect.Descriptor instead.
func (*TaskData) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{9}
}

func (x *TaskData) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TaskData) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TaskData) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TaskData) GetMaxProgress() int64 {
	if x != nil {
		return x.MaxProgress
	}
	return 0
}

func (x *TaskData) GetAwardList() []*Item {
	if x != nil {
		return x.AwardList
	}
	return nil
}

func (x *TaskData) GetTaskTid() string {
	if x != nil {
		return x.TaskTid
	}
	return ""
}

func (x *TaskData) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *TaskData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TaskData) GetClientParam() string {
	if x != nil {
		return x.ClientParam
	}
	return ""
}

func (x *TaskData) GetHide() bool {
	if x != nil {
		return x.Hide
	}
	return false
}

func (x *TaskData) GetBoxList() []*ItemBox {
	if x != nil {
		return x.BoxList
	}
	return nil
}

func (x *TaskData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskData) GetExtParam() string {
	if x != nil {
		return x.ExtParam
	}
	return ""
}

func (x *TaskData) GetCondParam() string {
	if x != nil {
		return x.CondParam
	}
	return ""
}

func (x *TaskData) GetCondType() int32 {
	if x != nil {
		return x.CondType
	}
	return 0
}

func (x *TaskData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *TaskData) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *TaskData) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

type GetNextTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetNextTaskReq) Reset() {
	*x = GetNextTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextTaskReq) ProtoMessage() {}

func (x *GetNextTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextTaskReq.ProtoReflect.Descriptor instead.
func (*GetNextTaskReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{10}
}

func (x *GetNextTaskReq) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetNextTaskRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  string    `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Data *TaskData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Max  int32     `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Cur  int32     `protobuf:"varint,4,opt,name=cur,proto3" json:"cur,omitempty"`
}

func (x *GetNextTaskRsp) Reset() {
	*x = GetNextTaskRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextTaskRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextTaskRsp) ProtoMessage() {}

func (x *GetNextTaskRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextTaskRsp.ProtoReflect.Descriptor instead.
func (*GetNextTaskRsp) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{11}
}

func (x *GetNextTaskRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *GetNextTaskRsp) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetNextTaskRsp) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *GetNextTaskRsp) GetCur() int32 {
	if x != nil {
		return x.Cur
	}
	return 0
}

// 任务完成
type TaskCompletedNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskCid       string `protobuf:"bytes,1,opt,name=task_cid,json=taskCid,proto3" json:"task_cid,omitempty"`
	TaskType      int32  `protobuf:"varint,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	PlatAid       int32  `protobuf:"varint,3,opt,name=plat_aid,json=platAid,proto3" json:"plat_aid,omitempty"`
	Openid        string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	GameGid       string `protobuf:"bytes,6,opt,name=game_gid,json=gameGid,proto3" json:"game_gid,omitempty"`
	CompletedTime int64  `protobuf:"varint,7,opt,name=completed_time,json=completedTime,proto3" json:"completed_time,omitempty"`
	Param         string `protobuf:"bytes,8,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *TaskCompletedNot) Reset() {
	*x = TaskCompletedNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCompletedNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletedNot) ProtoMessage() {}

func (x *TaskCompletedNot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletedNot.ProtoReflect.Descriptor instead.
func (*TaskCompletedNot) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{12}
}

func (x *TaskCompletedNot) GetTaskCid() string {
	if x != nil {
		return x.TaskCid
	}
	return ""
}

func (x *TaskCompletedNot) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *TaskCompletedNot) GetPlatAid() int32 {
	if x != nil {
		return x.PlatAid
	}
	return 0
}

func (x *TaskCompletedNot) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *TaskCompletedNot) GetGameGid() string {
	if x != nil {
		return x.GameGid
	}
	return ""
}

func (x *TaskCompletedNot) GetCompletedTime() int64 {
	if x != nil {
		return x.CompletedTime
	}
	return 0
}

func (x *TaskCompletedNot) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type UpdateTaskStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskTid  string `protobuf:"bytes,1,opt,name=task_tid,json=taskTid,proto3" json:"task_tid,omitempty"`
	Progress int32  `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"` // 进度
}

func (x *UpdateTaskStatusReq) Reset() {
	*x = UpdateTaskStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusReq) ProtoMessage() {}

func (x *UpdateTaskStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateTaskStatusReq) GetTaskTid() string {
	if x != nil {
		return x.TaskTid
	}
	return ""
}

func (x *UpdateTaskStatusReq) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type UpdateTaskStatusRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  string    `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Task *TaskData `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *UpdateTaskStatusRsp) Reset() {
	*x = UpdateTaskStatusRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskStatusRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskStatusRsp) ProtoMessage() {}

func (x *UpdateTaskStatusRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskStatusRsp.ProtoReflect.Descriptor instead.
func (*UpdateTaskStatusRsp) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTaskStatusRsp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *UpdateTaskStatusRsp) GetTask() *TaskData {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_proto_task_proto protoreflect.FileDescriptor

var file_proto_task_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x63, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x6f, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x29,
	0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x29,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x2b, 0x0a,
	0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x04, 0x50, 0x72,
	0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x39,
	0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x6f, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x72, 0x6f,
	0x62, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x62, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x62, 0x22, 0x28, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x22, 0xb3, 0x04, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x68, 0x69, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x62, 0x6f, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x6f, 0x78, 0x52, 0x07, 0x62, 0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63,
	0x75, 0x72, 0x22, 0xd5, 0x01, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x43,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x41, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x4c, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x2a, 0x20, 0x0a, 0x09, 0x41, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12,
	0x06, 0x0a, 0x02, 0x41, 0x64, 0x10, 0x01, 0x32, 0xbf, 0x03, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x11, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x14, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x11, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x12, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x42, 0x6f, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x74, 0x61, 0x73, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_task_proto_rawDescOnce sync.Once
	file_proto_task_proto_rawDescData = file_proto_task_proto_rawDesc
)

func file_proto_task_proto_rawDescGZIP() []byte {
	file_proto_task_proto_rawDescOnce.Do(func() {
		file_proto_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_task_proto_rawDescData)
	})
	return file_proto_task_proto_rawDescData
}

var file_proto_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_task_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_task_proto_goTypes = []interface{}{
	(AwardType)(0),              // 0: task.AwardType
	(*GetAwardReq)(nil),         // 1: task.GetAwardReq
	(*GetAwardRsp)(nil),         // 2: task.GetAwardRsp
	(*GetTaskDataReq)(nil),      // 3: task.GetTaskDataReq
	(*GetTaskDataRsp)(nil),      // 4: task.GetTaskDataRsp
	(*GetTaskListReq)(nil),      // 5: task.GetTaskListReq
	(*GetTaskListRsp)(nil),      // 6: task.GetTaskListRsp
	(*Prob)(nil),                // 7: task.Prob
	(*ItemBox)(nil),             // 8: task.ItemBox
	(*Item)(nil),                // 9: task.Item
	(*TaskData)(nil),            // 10: task.TaskData
	(*GetNextTaskReq)(nil),      // 11: task.GetNextTaskReq
	(*GetNextTaskRsp)(nil),      // 12: task.GetNextTaskRsp
	(*TaskCompletedNot)(nil),    // 13: task.TaskCompletedNot
	(*UpdateTaskStatusReq)(nil), // 14: task.UpdateTaskStatusReq
	(*UpdateTaskStatusRsp)(nil), // 15: task.UpdateTaskStatusRsp
}
var file_proto_task_proto_depIdxs = []int32{
	0,  // 0: task.GetAwardReq.type:type_name -> task.AwardType
	9,  // 1: task.GetAwardRsp.award_list:type_name -> task.Item
	0,  // 2: task.GetAwardRsp.type:type_name -> task.AwardType
	10, // 3: task.GetTaskDataRsp.task_data:type_name -> task.TaskData
	10, // 4: task.GetTaskListRsp.list:type_name -> task.TaskData
	7,  // 5: task.ItemBox.prob:type_name -> task.Prob
	9,  // 6: task.TaskData.award_list:type_name -> task.Item
	8,  // 7: task.TaskData.box_list:type_name -> task.ItemBox
	10, // 8: task.GetNextTaskRsp.data:type_name -> task.TaskData
	10, // 9: task.UpdateTaskStatusRsp.task:type_name -> task.TaskData
	5,  // 10: task.Task.GetTaskList:input_type -> task.GetTaskListReq
	1,  // 11: task.Task.GetAward:input_type -> task.GetAwardReq
	11, // 12: task.Task.GetNextTask:input_type -> task.GetNextTaskReq
	1,  // 13: task.Task.GetBoxTaskAward:input_type -> task.GetAwardReq
	5,  // 14: task.Task.GetBoxTaskList:input_type -> task.GetTaskListReq
	5,  // 15: task.Task.RefreshBoxTaskList:input_type -> task.GetTaskListReq
	14, // 16: task.Task.UpdateTaskStatus:input_type -> task.UpdateTaskStatusReq
	6,  // 17: task.Task.GetTaskList:output_type -> task.GetTaskListRsp
	2,  // 18: task.Task.GetAward:output_type -> task.GetAwardRsp
	12, // 19: task.Task.GetNextTask:output_type -> task.GetNextTaskRsp
	2,  // 20: task.Task.GetBoxTaskAward:output_type -> task.GetAwardRsp
	6,  // 21: task.Task.GetBoxTaskList:output_type -> task.GetTaskListRsp
	6,  // 22: task.Task.RefreshBoxTaskList:output_type -> task.GetTaskListRsp
	15, // 23: task.Task.UpdateTaskStatus:output_type -> task.UpdateTaskStatusRsp
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_task_proto_init() }
func file_proto_task_proto_init() {
	if File_proto_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAwardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAwardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextTaskRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCompletedNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskStatusRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_task_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_task_proto_goTypes,
		DependencyIndexes: file_proto_task_proto_depIdxs,
		EnumInfos:         file_proto_task_proto_enumTypes,
		MessageInfos:      file_proto_task_proto_msgTypes,
	}.Build()
	File_proto_task_proto = out.File
	file_proto_task_proto_rawDesc = nil
	file_proto_task_proto_goTypes = nil
	file_proto_task_proto_depIdxs = nil
}
